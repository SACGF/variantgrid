# Generated by Django 3.2.6 on 2021-10-13 02:41

from django.db import migrations


def create_not_public(apps, _schema_editor):
    FlagType = apps.get_model("flags", "FlagType")
    FlagResolution = apps.get_model("flags", "FlagResolution")
    FlagTypeResolution = apps.get_model("flags", "FlagTypeResolution")

    not_public, _ = FlagType.objects.get_or_create(
        id="classification_not_public",
        defaults={
            "comments_enabled": True,
            "context_id": "classification",
            "description": "This classification can be shared to other users, but is not suitable for ClinVar or other 3rd parties",
            "importance": 2,
            "label": "Don't Share with ClinVar",
            "only_one": True,
            "permission": "O",
            "raise_permission": "O"
        }
    )

    dont_share, _ = FlagResolution.objects.get_or_create(
        id="np_dont_share",
        defaults={
            "label": "Do Not Share w ClinVar",
            "description": "This record wont be considered for exporting to ClinVar",
            "status": "O"
        }
    )
    share_again, _ = FlagResolution.objects.get_or_create(
        id="np_share",
        defaults={
            "label": "Allow Sharing w ClinVar",
            "description": "This record will be shared with ClinVar (if normal ClinVar requirements are met)",
            "status": "C"
        }
    )

    FlagTypeResolution.objects.get_or_create(
        flag_type=not_public,
        resolution=dont_share
    )

    FlagTypeResolution.objects.get_or_create(
        flag_type=not_public,
        resolution=share_again
    )


class Migration(migrations.Migration):

    dependencies = [
        ('flags', '0004_one_off_allele_37_not_38_data'),
    ]

    operations = [
        migrations.RunPython(create_not_public)
    ]
