# Generated by Django 4.0.2 on 2022-06-20 02:44
from collections import defaultdict, Counter

from django.db import migrations


def _one_off_assign_ontology_import_versions(apps, _schema_editor):
    OntologyImport = apps.get_model("ontology", "OntologyImport")
    OntologyVersion = apps.get_model("ontology", "OntologyVersion")

    records = []
    counts = defaultdict(Counter)
    for o_import in OntologyImport.objects.all().order_by("pk"):
        counts[o_import.import_source][o_import.filename] += 1
        o_import.version = counts[o_import.import_source][o_import.filename]
        records.append(o_import)

    if records:
        OntologyImport.objects.bulk_update(records, ["version"], batch_size=2000)

    # Find the latest for each ontology import - if they all exist make a version
    gencc_filenames = ['https://search.thegencc.org/download/action/submissions-export-csv', 'gencc-submissions.csv']
    ONTOLOGY_IMPORTS = {
        "gencc_import": ('gencc', gencc_filenames),
        "mondo_import": ('MONDO', ['mondo.json']),
        "hp_owl_import": ('HP', ['hp.owl']),
        "hp_phenotype_to_genes_import": ('HP', ['phenotype_to_genes.txt']),
    }
    oi_qs = OntologyImport.objects.all()
    kwargs = {}
    for field, (import_source, filenames) in ONTOLOGY_IMPORTS.items():
        kwargs[field] = oi_qs.filter(import_source=import_source, filename__in=filenames).order_by("pk").last()

    if all(kwargs.values()):
        OntologyVersion.objects.get_or_create(**kwargs)


class Migration(migrations.Migration):

    dependencies = [
        ('ontology', '0015_ontologyimport_version_ontologyversion'),
    ]

    operations = [
        migrations.RunPython(_one_off_assign_ontology_import_versions),
    ]
