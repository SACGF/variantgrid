# Generated by Django 3.1 on 2020-09-29 05:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import library.django_utils
import library.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('annotation', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('snpdb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CanonicalTranscriptCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('description', models.TextField(blank=True)),
                ('filename', models.TextField(blank=True)),
                ('annotation_consortium', models.CharField(choices=[('R', 'RefSeq'), ('E', 'Ensembl')], max_length=1)),
                ('file_md5sum', models.TextField()),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('identifier', models.TextField(primary_key=True, serialize=False)),
                ('annotation_consortium', models.CharField(choices=[('R', 'RefSeq'), ('E', 'Ensembl')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='GeneAnnotationImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('annotation_consortium', models.CharField(choices=[('R', 'RefSeq'), ('E', 'Ensembl')], max_length=1)),
                ('filename', models.TextField()),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneAnnotationRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('annotation_consortium', models.CharField(choices=[('R', 'RefSeq'), ('E', 'Ensembl')], max_length=1)),
                ('gene_annotation_import', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneannotationimport')),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
            ],
            options={
                'unique_together': {('version', 'annotation_consortium', 'genome_build')},
            },
        ),
        migrations.CreateModel(
            name='GeneList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('import_status', models.CharField(choices=[('C', 'created'), ('I', 'importing'), ('R', 'Requires user input'), ('E', 'error'), ('S', 'success'), ('M', 'Marked For Deletion'), ('D', 'Deleting')], default='C', max_length=1)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('locked', models.BooleanField(default=False)),
                ('url', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneSymbol',
            fields=[
                ('symbol', models.TextField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='GeneVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('description', models.TextField(null=True)),
                ('biotype', models.TextField(null=True)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.gene')),
                ('gene_symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
            ],
        ),
        migrations.CreateModel(
            name='HGNCGeneNamesImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PanelAppPanel',
            fields=[
                ('panel_id', models.TextField(primary_key=True, serialize=False)),
                ('disease_group', models.TextField()),
                ('disease_sub_group', models.TextField()),
                ('name', models.TextField()),
                ('current_version', models.TextField()),
                ('cached_web_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.cachedwebresource')),
            ],
        ),
        migrations.CreateModel(
            name='Pfam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pfam_id', models.TextField(unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PfamSequence',
            fields=[
                ('seq_id', models.TextField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProteinDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseGeneSymbol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('gene_symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneannotationrelease')),
            ],
            options={
                'unique_together': {('release', 'gene_symbol')},
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('identifier', models.TextField(primary_key=True, serialize=False)),
                ('annotation_consortium', models.CharField(choices=[('R', 'RefSeq'), ('E', 'Ensembl')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='TranscriptVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('biotype', models.TextField(null=True)),
                ('data', models.JSONField(blank=True, default=library.utils.empty_dict)),
                ('gene_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneversion')),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
                ('import_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneannotationimport')),
                ('transcript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.transcript')),
            ],
            options={
                'unique_together': {('transcript', 'version', 'genome_build')},
            },
            bases=(library.django_utils.SortByPKMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProteinDomainTranscriptVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('protein_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.proteindomain')),
                ('transcript_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.transcriptversion')),
            ],
        ),
        migrations.CreateModel(
            name='PfamSequenceIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pfam_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.pfamsequence')),
                ('transcript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.transcript')),
                ('transcript_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.transcriptversion')),
            ],
        ),
        migrations.CreateModel(
            name='PfamDomains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('pfam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.pfam')),
                ('pfam_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.pfamsequence')),
            ],
        ),
        migrations.CreateModel(
            name='PanelAppPanelRelevantDisorders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('panel_app_panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.panelapppanel')),
            ],
        ),
        migrations.CreateModel(
            name='HGNCGeneNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_symbol', models.TextField()),
                ('approved_name', models.TextField()),
                ('status', models.CharField(choices=[('A', 'Approved'), ('S', 'Symbol Withdrawn'), ('E', 'Entry Withdrawn')], max_length=1)),
                ('previous_symbols', models.TextField()),
                ('synonyms', models.TextField()),
                ('refseq_ids', models.TextField()),
                ('hgnc_import', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.hgncgenenamesimport')),
            ],
        ),
        migrations.CreateModel(
            name='GnomADGeneConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oe_lof', models.FloatField(null=True)),
                ('oe_lof_lower', models.FloatField(null=True)),
                ('oe_lof_upper', models.FloatField(null=True)),
                ('cached_web_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.cachedwebresource')),
                ('gene', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.gene')),
                ('gene_symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('transcript', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.transcript')),
            ],
        ),
        migrations.AddField(
            model_name='geneversion',
            name='hgnc',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.hgncgenenames'),
        ),
        migrations.AddField(
            model_name='geneversion',
            name='import_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneannotationimport'),
        ),
        migrations.CreateModel(
            name='GeneSymbolWiki',
            fields=[
                ('wiki_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='snpdb.wiki')),
                ('gene_symbol', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('snpdb.wiki',),
        ),
        migrations.CreateModel(
            name='GeneSymbolAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('alias', models.TextField(unique=True)),
                ('source', models.CharField(choices=[('N', 'NCBI'), ('U', 'UCSC'), ('H', 'HGNC'), ('M', 'Manual')], max_length=1)),
                ('description', models.TextField(null=True)),
                ('gene_symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneListWiki',
            fields=[
                ('wiki_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='snpdb.wiki')),
                ('gene_list', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='genes.genelist')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('snpdb.wiki',),
        ),
        migrations.CreateModel(
            name='GeneListCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('icon_css_class', models.TextField(blank=True)),
                ('hidden', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('company', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='snpdb.company')),
            ],
        ),
        migrations.AddField(
            model_name='genelist',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.genelistcategory'),
        ),
        migrations.AddField(
            model_name='genelist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GeneInfo',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('icon_css_class', models.TextField()),
                ('gene_list', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='genes.genelist')),
            ],
        ),
        migrations.CreateModel(
            name='GeneCoverageCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField()),
                ('data_state', models.CharField(choices=[('N', 'Non Existent'), ('D', 'Deleted'), ('R', 'Running'), ('S', 'Skipped'), ('E', 'Error'), ('C', 'Complete')], max_length=1)),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
            ],
        ),
        migrations.CreateModel(
            name='GeneCoverageCanonicalTranscript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_gene_symbol', models.TextField()),
                ('original_transcript_id', models.TextField()),
                ('min', models.IntegerField()),
                ('mean', models.FloatField()),
                ('std_dev', models.FloatField()),
                ('percent_0x', models.FloatField()),
                ('percent_10x', models.FloatField(null=True)),
                ('percent_20x', models.FloatField()),
                ('percent_100x', models.FloatField(null=True)),
                ('sensitivity', models.FloatField()),
                ('canonical_transcript_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='genes.canonicaltranscriptcollection')),
                ('gene_coverage_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.genecoveragecollection')),
                ('gene_symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('transcript', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.transcript')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneCoverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_gene_symbol', models.TextField()),
                ('original_transcript_id', models.TextField()),
                ('min', models.IntegerField()),
                ('mean', models.FloatField()),
                ('std_dev', models.FloatField()),
                ('percent_0x', models.FloatField()),
                ('percent_10x', models.FloatField(null=True)),
                ('percent_20x', models.FloatField()),
                ('percent_100x', models.FloatField(null=True)),
                ('sensitivity', models.FloatField()),
                ('gene_coverage_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.genecoveragecollection')),
                ('gene_symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('transcript', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.transcript')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomTextGeneList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('md5_hash', models.CharField(max_length=32)),
                ('name', models.TextField()),
                ('text', models.TextField()),
                ('gene_list', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='genes.genelist')),
            ],
        ),
        migrations.CreateModel(
            name='CanonicalTranscript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_gene_symbol', models.TextField()),
                ('original_transcript_id', models.TextField()),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.canonicaltranscriptcollection')),
                ('gene_symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('transcript', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.transcript')),
            ],
        ),
        migrations.CreateModel(
            name='CachedThirdPartyGeneList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached_web_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.cachedwebresource')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.company')),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseTranscriptVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneannotationrelease')),
                ('transcript_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.transcriptversion')),
            ],
            options={
                'unique_together': {('release', 'transcript_version')},
            },
        ),
        migrations.CreateModel(
            name='ReleaseGeneVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneversion')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.geneannotationrelease')),
            ],
            options={
                'unique_together': {('release', 'gene_version')},
            },
        ),
        migrations.CreateModel(
            name='ReleaseGeneSymbolGene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('match_info', models.TextField(null=True)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.gene')),
                ('release_gene_symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.releasegenesymbol')),
            ],
            options={
                'unique_together': {('release_gene_symbol', 'gene')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='geneversion',
            unique_together={('gene', 'version', 'genome_build')},
        ),
        migrations.CreateModel(
            name='GeneListGeneSymbol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_name', models.TextField(blank=True, null=True)),
                ('modification_info', models.TextField(null=True)),
                ('gene_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.genelist')),
                ('gene_symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('gene_symbol_alias', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbolalias')),
            ],
            options={
                'unique_together': {('gene_list', 'original_name')},
            },
        ),
    ]
