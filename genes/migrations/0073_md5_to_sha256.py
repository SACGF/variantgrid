# Generated by Django 4.2.10 on 2024-06-20 02:03
import os

from django.db import migrations

from library.utils import file_sha256sum, sha256_str


def _md5_to_sha256(apps, schema_editor):
    CanonicalTranscriptCollection = apps.get_model('genes', 'CanonicalTranscriptCollection')
    TranscriptVersionSequenceInfoFastaFileImport = apps.get_model('genes', 'TranscriptVersionSequenceInfoFastaFileImport')
    CustomTextGeneList = apps.get_model('genes', 'CustomTextGeneList')

    CTC_MD5_TO_SHA256 = {
        '13a8651bb1ec2641d75db5b8b4b3e939': '002f50631a4f925865e6e97c907493d7d991576bd84eb425862c7858627f11d7',
        '31f75853991063475fb7d48c0f79287c': '0e4ad8a7bb6ae7ecd3f62de6d052ca08da041ca08fcb671e221c19896ee7ef1f',
        'dcfbaa86d042dadb67b05d541300cdb6': '9871cbf6402a7880a05578813566d9842697894d776f16f0f56f8b191b4be9bc',
        '7b026f0e324e6274dcc90befda9675e5': '878f1ba2f3a0e04e0e95826361091daa133dbf46ba589740fc8784cddda5cd5f',
        'a7052614ab9f9fb0e38068a55269dd67': 'cb8cf443c36462289f71cc46dae7ae54ba7eb9499dca593fa18740eb692a75dc',
        'cd5bb096c4074d2a1a07a799675750d9': 'e326dde93d60b710680b08bc050ad888647529212933a400f682a236c859e26b',
        '0f35293317f8caa242a31a6e688c2a79': 'd8e291d1da51b41233bacd551aedfdcc57a4bf69a381fb8a19e78e6080d63c77',
        '7a2c15aa270b4a10022e4f4adf852937': 'c7f4f334cafe18eae02bcee90bc20c4004a76954e443e3af0b1fee1d513880c3',
        'b5bf65d3853b4fe55f7d080076eddf0d': 'd338056b46df73c869c46a43b1d748360a0754a0cb20488ff68fd874f4841b35',
        '66ab791894d027e462298a7f59f6be97': 'c893285c2f9333661001824c08bfea4cd71874d41f4169875d705faaccd023f4',
        'd7ea6a84c838a362095b3c3e91ad771c': '03a3541471f268786ad6803a00507550091b0f140a1baba96a45bd64f4005339',
    }
    ctc_records = []
    for ctc in CanonicalTranscriptCollection.objects.all():
        # file_md5sum -> file_sha256sum
        if precalc := CTC_MD5_TO_SHA256.get(ctc.file_md5sum):
            ctc.file_sha256sum = precalc
        else:
            if os.path.exists(ctc.filename):
                ctc.file_sha256sum = file_sha256sum(ctc.filename)
            else:
                ctc.file_sha256sum = "not-a-real-hash"  # Not unique
        ctc_records.append(ctc)
    if ctc_records:
        CanonicalTranscriptCollection.objects.bulk_update(ctc_records, ['file_sha256sum'])

    FFI_MD5_TO_SHA256 = {
        "a3306ec93f9b166dd370fe436d671db1": "59b428a26039d50eb8e19e3afa387d773cab2cab663414799005f024d6481fec",
        # we switched to hashing the URL so this is:
        # https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh38_latest/refseq_identifiers/GRCh38_latest_rna.fna.gz
        "4397516c558452ca35acb5e2fe7da0a6": "f3a59b5841bfa62fc433419f17b01b9e9320234b692820c4f0178d97988126fb",
    }

    ffi_records = []
    for ffi in TranscriptVersionSequenceInfoFastaFileImport.objects.all():
        # md5_hash -> sha256_hash (from filename contents)
        if precalc := FFI_MD5_TO_SHA256.get(ffi.md5_hash):
            ffi.sha256_hash = precalc
        else:
            if ffi.filename.startswith("http"):  # We switched to using url
                ffi.sha256_hash = sha256_str(ffi.filename)
            elif os.path.exists(ffi.filename):
                ffi.sha256_hash = file_sha256sum(ffi.filename)
            else:
                # This needs to be unique, if wrong, will just re-import a sequence file causing no harm
                ffi.sha256_hash = "old-md5sum-hash-" + ffi.md5_hash
        ffi_records.append(ffi)

    if ffi_records:
        TranscriptVersionSequenceInfoFastaFileImport.objects.bulk_update(ffi_records, ['sha256_hash'])

    ctgl_records = []
    for ctgl in CustomTextGeneList.objects.all():
        # md5_hash -> sha256_hash (from text)
        ctgl.sha256_hash = sha256_str(ctgl.text)
        ctgl_records.append(ctgl)
    if ctgl_records:
        CustomTextGeneList.objects.bulk_update(ctgl_records, ['sha256_hash'])


class Migration(migrations.Migration):

    dependencies = [
        ('genes', '0072_canonicaltranscriptcollection_file_sha256sum_and_more'),
    ]

    operations = [
        migrations.RunPython(_md5_to_sha256)
    ]
