# Generated by Django 3.1.3 on 2021-01-21 06:46

from django.db import migrations


def _one_off_move_ontology(apps, schema_editor):
    PhenotypeNodeOMIM = apps.get_model("analysis", "PhenotypeNodeOMIM")
    PhenotypeNodeHPO = apps.get_model("analysis", "PhenotypeNodeHPO")
    PhenotypeNodeOntologyTerm = apps.get_model("analysis", "PhenotypeNodeOntologyTerm")
    OntologyTerm = apps.get_model("ontology", "OntologyTerm")

    if PhenotypeNodeHPO.objects.exists() or PhenotypeNodeOMIM.objects.exists():
        if not OntologyTerm.objects.exists():
            msg = "No ontology terms exist - you need to run 'ontology_import' before migrating past this point."
            raise ValueError(msg)

    for pn_hpo in PhenotypeNodeHPO.objects.all():
        hpo_id = "HP:%07d" % int(pn_hpo.hpo_synonym.hpo_id)
        ontology_term = OntologyTerm.objects.get(pk=hpo_id)
        # Original data may have had dupes
        PhenotypeNodeOntologyTerm.objects.get_or_create(phenotype_node=pn_hpo.phenotype_node, ontology_term=ontology_term)

    MOVED_OMIM = {
        614087: 227650,  # Fancomi anaemia
    }

    for pn_omim in PhenotypeNodeOMIM.objects.all():
        mim_id = pn_omim.mim_morbid_alias.mim_morbid_id
        mim_id = MOVED_OMIM.get(mim_id, mim_id)  # Some have been replaced
        omim_id = "OMIM:%d" % int(mim_id)
        try:
            ontology_term = OntologyTerm.objects.get(pk=omim_id)
        except OntologyTerm.DoesNotExist:
            print(f"Could not load: {omim_id}")
            raise
        # Original data may have had dupes
        PhenotypeNodeOntologyTerm.objects.get_or_create(phenotype_node=pn_omim.phenotype_node, ontology_term=ontology_term)


class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0013_phenotypenodeontologyterm'),
    ]

    operations = [
        migrations.RunPython(_one_off_move_ontology)
    ]
