# Generated by Django 3.1 on 2020-09-29 05:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('genes', '0001_initial'),
        ('seqauto', '0001_initial'),
        ('annotation', '0002_auto_20200929_1503'),
        ('patients', '0001_initial'),
        ('snpdb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.TextField(blank=True, null=True)),
                ('result_required_date', models.DateTimeField(blank=True, null=True)),
                ('report_date', models.DateTimeField(blank=True, null=True)),
                ('details', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('O', 'open'), ('N', 'No Test'), ('S', 'solved'), ('U', 'unsolved')], default='O', max_length=1)),
                ('workflow_status', models.CharField(choices=[('NA', 'N/A'), ('SP', 'Sample Processing'), ('LP', 'Library Prep Complete'), ('SC', 'Sequencing Complete'), ('VR', 'VCF Ready'), ('AC', 'Analysis Complete'), ('RP', 'Reporting')], default='NA', max_length=2)),
                ('investigation_type', models.CharField(choices=[('S', 'Single Sample'), ('T', 'Trio'), ('C', 'Cohort')], default='S', max_length=1)),
                ('external_pk', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.externalpk')),
                ('lead_scientist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PathologyTest',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.TextField(primary_key=True, serialize=False)),
                ('deleted', models.BooleanField(default=False)),
                ('empty_test', models.BooleanField(default=False)),
                ('curator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PathologyTestOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('started_library', models.DateTimeField(null=True)),
                ('finished_library', models.DateTimeField(null=True)),
                ('started_sequencing', models.DateTimeField(null=True)),
                ('finished_sequencing', models.DateTimeField(null=True)),
                ('order_completed', models.DateTimeField(null=True)),
                ('case', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pathtests.case')),
                ('custom_gene_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='genes.genelist')),
                ('experiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='seqauto.experiment')),
                ('external_pk', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.externalpk')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PathologyTestWiki',
            fields=[
                ('wiki_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='snpdb.wiki')),
                ('pathology_test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytest')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('snpdb.wiki',),
        ),
        migrations.CreateModel(
            name='PathologyTestVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('version', models.IntegerField(default=1)),
                ('confirmed_date', models.DateTimeField(null=True)),
                ('enrichment_kit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='seqauto.enrichmentkit')),
                ('gene_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='genes.genelist')),
                ('pathology_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytest')),
            ],
            options={
                'unique_together': {('pathology_test', 'version')},
            },
        ),
        migrations.CreateModel(
            name='PathologyTestSynonyms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('synonym_name', models.TextField()),
                ('pathology_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytest')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyTestPanelAppPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_app_panel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='genes.panelapppanel')),
                ('pathology_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytest')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyTestOrderSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathology_test_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytestorder')),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='snpdb.sample')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyTestOrderPopulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('population', models.CharField(choices=[('AFR', 'African/African American'), ('ASJ', 'Ashkenazi Jewish'), ('AM', 'Australo Melanesian'), ('CA', 'Central Asian'), ('EAS', 'East Asian'), ('FIN', 'Finnish'), ('AMR', 'Latino / Mixed Amerindian'), ('MEA', 'Middle East / North African'), ('NFE', 'Non-Finnish European'), ('PO', 'Polynesian'), ('SAS', 'South Asian'), ('SEA', 'South East Asian'), ('OTH', 'Other')], max_length=3)),
                ('pathology_test_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytestorder')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyTestOrderOMIM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mim_morbid_alias', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.mimmorbidalias')),
                ('pathology_test_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytestorder')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyTestOrderHPO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hpo_synonym', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.hposynonym')),
                ('pathology_test_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytestorder')),
            ],
        ),
        migrations.AddField(
            model_name='pathologytestorder',
            name='pathology_test_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytestversion'),
        ),
        migrations.AddField(
            model_name='pathologytestorder',
            name='sequencing_run',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='seqauto.sequencingrun'),
        ),
        migrations.AddField(
            model_name='pathologytestorder',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PathologyTestOMIM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mim_morbid_alias', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.mimmorbidalias')),
                ('pathology_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytest')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyTestHPO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hpo_synonym', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.hposynonym')),
                ('pathology_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytest')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyTestGeneModificationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('outcome', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), ('R', 'Rejected')], default='P', max_length=1)),
                ('operation', models.CharField(choices=[('+', 'Add'), ('-', 'Remove')], max_length=1)),
                ('comments', models.TextField(blank=True)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genes.gene')),
                ('pathology_test_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytestversion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CaseClinician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specified_on_clinical_grounds', models.BooleanField(default=False)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathtests.case')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.clinician')),
            ],
        ),
        migrations.CreateModel(
            name='ActivePathologyTestVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathology_test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytest')),
                ('pathology_test_version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pathtests.pathologytestversion')),
            ],
        ),
    ]
