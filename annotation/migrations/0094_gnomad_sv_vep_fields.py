# Generated by Django 4.2.10 on 2024-03-19 23:25

from django.db import migrations
from django.db.models import Q

from library.django_utils import bulk_insert_class_data
from manual.operations.manual_operations import ManualOperation

VEP_PLUGIN_STRUCTURALVARIANTOVERLAP = 'o'


def _gnomad_sv_vep_fields(apps, _schema_editor):
    ColumnVEPField = apps.get_model("annotation", "ColumnVEPField")

    VARIANT_ANNOTATION_PIPELINE_TYPE_STANDARD = 'S'
    VARIANT_ANNOTATION_PIPELINE_TYPE_CNV = 'C'
    FREQUENCY_DATA = 'F'

    # reset all existing plugins/custom
    ColumnVEPField.objects.all().update(pipeline_type=None)
    # Existing plugins/custom are for standard only (not CNV)
    plugin_or_custom = Q(vep_plugin__isnull=False) | Q(vep_custom__isnull=False)
    ColumnVEPField.objects.filter(plugin_or_custom).update(pipeline_type=VARIANT_ANNOTATION_PIPELINE_TYPE_STANDARD)

    COLUMN_VEP_FIELD = [
        {'column': 'gnomad_sv_overlap_af', 'variant_grid_column_id': 'gnomad_sv_overlap_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},
        # The chosen value is copied into gnomad_af
        {'column': 'gnomad_sv_overlap_copied_to_gnomad_af', 'variant_grid_column_id': 'gnomad_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},
        {'column': 'gnomad_sv_overlap_percent', 'variant_grid_column_id': 'gnomad_sv_overlap_percent',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_PC', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},
        {'column': 'gnomad_sv_overlap_name', 'variant_grid_column_id': 'gnomad_sv_overlap_name',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_name', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},
        {'column': 'gnomad_sv_overlap_an', 'variant_grid_column_id': 'gnomad_an',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_AN', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},
        {'column': 'gnomad_sv_overlap_ac', 'variant_grid_column_id': 'gnomad_ac',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_AC', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},
        {'column': 'gnomad_sv_overlap_n_homalt', 'variant_grid_column_id': 'gnomad_hom_alt',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_N_HOMALT', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},
        {'column': 'gnomad_sv_overlap_popmax_af', 'variant_grid_column_id': 'gnomad_popmax_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_POPMAX_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP},

        # gnomAD love renaming their columns, so we need separate ones for 37 and 38
        # gnomAD GRCh37
        {'column': 'gnomad_sv_overlap_afr_af', 'variant_grid_column_id': 'gnomad_afr_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_AFR_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         'genome_build_id': 'GRCh37'},
        {'column': 'gnomad_sv_overlap_amr_af', 'variant_grid_column_id': 'gnomad_amr_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_AMR_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         'genome_build_id': 'GRCh37'},
        {'column': 'gnomad_sv_overlap_eas_af', 'variant_grid_column_id': 'gnomad_eas_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_EAS_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         'genome_build_id': 'GRCh37'},
        {'column': 'gnomad_sv_overlap_eur_af', 'variant_grid_column_id': 'gnomad_nfe_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_EUR_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         "genome_build_id": 'GRCh37'},
        {'column': 'gnomad_sv_overlap_oth_af', 'variant_grid_column_id': 'gnomad_oth_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_OTH_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         "genome_build_id": 'GRCh37'},

        # gnomAD GRCh38

        {'column': 'gnomad_sv_overlap_afr_af_38', 'variant_grid_column_id': 'gnomad_afr_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_afr_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         'genome_build_id': 'GRCh38'},
        {'column': 'gnomad_sv_overlap_amr_af_38', 'variant_grid_column_id': 'gnomad_amr_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_amr_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         'genome_build_id': 'GRCh38'},
        {'column': 'gnomad_sv_overlap_asj_af', 'variant_grid_column_id': 'gnomad_asj_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_asj_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         'genome_build_id': 'GRCh38'},
        {'column': 'gnomad_sv_overlap_eas_af_38', 'variant_grid_column_id': 'gnomad_eas_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_eas_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         'genome_build_id': 'GRCh38'},
        {'column': 'gnomad_sv_overlap_nfe_af', 'variant_grid_column_id': 'gnomad_nfe_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_nfe_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         "genome_build_id": 'GRCh38'},
        {'column': 'gnomad_sv_overlap_fin_af', 'variant_grid_column_id': 'gnomad_fin_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_fin_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         "genome_build_id": 'GRCh38'},
        {'column': 'gnomad_sv_overlap_mid_af', 'variant_grid_column_id': 'gnomad_mid_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_mid_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         "genome_build_id": 'GRCh38'},
        {'column': 'gnomad_sv_overlap_oth_af_38', 'variant_grid_column_id': 'gnomad_oth_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_oth_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         "genome_build_id": 'GRCh38'},
        {'column': 'gnomad_sv_overlap_sas_af', 'variant_grid_column_id': 'gnomad_sas_af',
         'pipeline_type': VARIANT_ANNOTATION_PIPELINE_TYPE_CNV, 'category': FREQUENCY_DATA,
         'source_field': 'SV_overlap_sas_AF', 'vep_plugin': VEP_PLUGIN_STRUCTURALVARIANTOVERLAP,
         "genome_build_id": 'GRCh38'},
    ]
    bulk_insert_class_data(apps, "annotation", [("ColumnVEPField", COLUMN_VEP_FIELD)])


def _reverse_gnomad_sv_vep_fields(apps, _schema_editor):
    ColumnVEPField = apps.get_model("annotation", "ColumnVEPField")
    ColumnVEPField.objects.filter(vep_plugin=VEP_PLUGIN_STRUCTURALVARIANTOVERLAP).delete()


def _test_has_cnv_annotation(apps):
    """ This also fails stuff - to force the reload """
    AnnotationRun = apps.get_model("annotation", "AnnotationRun")
    VariantAnnotationVersion = apps.get_model("annotation", "VariantAnnotationVersion")

    need_to_rerun_annotation = False
    for genome_build_name in ["GRCh37", "GRCh38"]:
        qs = VariantAnnotationVersion.objects.filter(genome_build__name=genome_build_name, active=True)
        vav = qs.order_by("annotation_date").last()
        ar_qs = AnnotationRun.objects.filter(annotation_range_lock__version=vav,
                                             pipeline_type='C')
        for ar in ar_qs:
            ar.error_exception = "manually failed to reload"
            ar.save()
            need_to_rerun_annotation = True

    return need_to_rerun_annotation


class Migration(migrations.Migration):

    dependencies = [
        ('annotation', '0093_variantannotation_gnomad_sv_overlap_af_and_more'),
        ('snpdb', '0121_new_gnomad_sv_variantgrid_columns'),  # VariantGridColumns inserted there
    ]

    operations = [
        migrations.RunPython(_gnomad_sv_vep_fields, reverse_code=_reverse_gnomad_sv_vep_fields),
        ManualOperation.operation_other(args=[
            "Re-run CNV annotation (should be quick) As admin, go to [annotation] -> [Pipeline runs] then click retry failed runs"],
            test=_test_has_cnv_annotation),

    ]
