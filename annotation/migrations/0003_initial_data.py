# Generated by Django 3.1 on 2020-09-29 06:09
import configparser
import re

from django.conf import settings
from django.db import migrations

from library.django_utils import bulk_insert_class_data


def populate_mutational_signature_info(apps, schema_editor):
    MutationalSignatureInfo = apps.get_model("annotation", "MutationalSignatureInfo")

    config = configparser.ConfigParser(interpolation=None)
    config.read(settings.MUTATIONAL_SIGNATURE_INFO_FILE)
    num_signatures = 0
    for section in config.sections():
        if m := re.match("Signature (\d+)", section):
            num_signatures += 1
            signature_id = int(m.group(1))
            sdata = config[section]
            comments = sdata["Comments"]
            if comments == "N/A":
                comments = ''

            MutationalSignatureInfo.objects.create(signature_id=signature_id,
                                                   cancer_types=sdata["Cancer types"],
                                                   proposed_aetiology=sdata["Proposed aetiology"],
                                                   additional_mutational_features=sdata["Additional mutational features"],
                                                   comments=comments,)

    print(f"Created info about {num_signatures} mutational signatures")


def populate_column_vcf_info(apps, schema_editor):
    COLUMN_VCF_INFO = [
        {'info_id': '1KG_AF', 'column_id': 'af_1kg', 'number': 1, 'type': 'F',
         'description': 'Estimated allele frequency in the range (0,1), based on AC/AN'},
        {'info_id': 'UK10K_AF', 'column_id': 'af_uk10k', 'number': None, 'type': 'F',
         'description': 'Allele frequency in called genotypes, from UK10 project'},
        {'info_id': 'GENE_BAND', 'column_id': 'band', 'number': None, 'type': 'S', 'description': 'Cytogenetic band'},
        {'info_id': 'CADD_phred', 'column_id': 'cadd_phred', 'number': 1, 'type': 'F',
         'description': 'Combined Annotation Dependent Depletion raw scores'},
        {'info_id': 'CADD_raw', 'column_id': 'cadd_raw', 'number': 1, 'type': 'F',
         'description': 'Phred-scaled score of Combined Annotation Dependent Depletion'},
        {'info_id': 'GENE_ccds_ids', 'column_id': 'ccds_ids', 'number': None, 'type': 'S',
         'description': 'Consensus Coding Sequence Project Ids'},
        {'info_id': 'CLNSIG', 'column_id': 'clinical_significance', 'number': None, 'type': 'S',
         'description': 'ClinVar Variant Clinical Significance, 0 - Uncertain significance, 1 - not provided, 2 - Benign, 3 - Likely benign, 4 - Likely pathogenic, 5 - Pathogenic, 6 - drug response, 7 - histocompatibility, 255 - other'},
        {'info_id': 'ALLELEID', 'column_id': 'clinvar_allele_id', 'number': None, 'type': 'I',
         'description': 'the ClinVar Allele ID'},
        {'info_id': 'CLNVI', 'column_id': 'clinvar_clinical_sources', 'number': None, 'type': 'S',
         'description': "the variant's clinical sources reported as tag-value pairs of database and variant identifier"},
        {'info_id': 'CLNDISDB', 'column_id': 'clinvar_disease_database_name', 'number': None, 'type': 'S',
         'description': 'Tag-value pairs of disease database name and identifier, e.g. OMIM:NNNNNN'},
        {'info_id': 'CLNSIG_MAX', 'column_id': 'clinvar_highest_pathogenicity', 'number': None, 'type': 'S',
         'description': 'ClinVar Highest Pathogenicty'},
        {'info_id': 'ORIGIN', 'column_id': 'clinvar_origin', 'number': None, 'type': 'S',
         'description': 'Allele origin. One or more of the following values may be added: 0 - unknown; 1 - germline; 2 - somatic; 4 - inherited; 8 - paternal; 16 - maternal; 32 - de-novo; 64 - biparental; 128 - uniparental; 256 - not-tested; 512 - tested-inconclusive; 1073741824 - other'},
        {'info_id': 'CLNDN', 'column_id': 'clinvar_preferred_disease_name', 'number': None, 'type': 'S',
         'description': "ClinVar's preferred disease name for the concept specified by disease identifiers in CLNDISDB"},
        {'info_id': 'CLNREVSTAT', 'column_id': 'clinvar_review_status', 'number': None, 'type': 'S',
         'description': 'ClinVar review status for the Variation ID'},
        {'info_id': 'CLNVID', 'column_id': 'clinvar_variation_id', 'number': None, 'type': 'I',
         'description': 'ClinVar Variant Accession'},
        {'info_id': 'CONSEQUENCE', 'column_id': 'consequence', 'number': None, 'type': 'S',
         'description': 'Molecular Consequence'},
        {'info_id': 'COSMIC_CNT', 'column_id': 'cosmic_count', 'number': 1, 'type': 'I',
         'description': 'Number of COSMIC samples with mutation'},
        {'info_id': 'COSMIC_ID', 'column_id': 'cosmic_id', 'number': None, 'type': 'S', 'description': 'COSMIC_ID'},
        {'info_id': 'COSMIC_LEGACY_ID', 'column_id': 'cosmic_legacy_id', 'number': 1, 'type': 'S',
         'description': 'COSMIC Legacy ID'},
        {'info_id': 'DBSCSNV_ADA', 'column_id': 'dbscsnv_ada_score', 'number': None, 'type': 'F',
         'description': 'dbSCSNV Ada Score'},
        {'info_id': 'DBSCSNV_RF', 'column_id': 'dbscsnv_rf_score', 'number': None, 'type': 'F',
         'description': 'dbSCSNV RF Score'},
        {'info_id': 'DBSNP_RS_ID', 'column_id': 'dbsnp_rs_id', 'number': None, 'type': 'S', 'description': 'dbSNP ID'},
        {'info_id': 'DOMAINS', 'column_id': 'domains', 'number': None, 'type': 'S', 'description': 'Protein domains'},
        {'info_id': 'GENE_END_POSITION', 'column_id': 'end_position', 'number': None, 'type': 'I',
         'description': 'The Ensembl gene start and end coordinates correspond to the outermost transcript start and end coordinates (containing the UTRs). These can be part of the same transcript or belong to two different transcripts. An example of the latter is the human BRCA2 gene, where the start coordinate corresponds to the start coordinate of transcript ENST00000380152 (BRCA2-001) and the end coordinate to the end coordinate of transcript ENST00000544455 (BRCA2-201).'},
        {'info_id': 'ENSEMBL_PROTEIN', 'column_id': 'ensembl_protein', 'number': None, 'type': 'S',
         'description': 'Ensembl Protein ID'},
        {'info_id': 'GENE_entrez_gene_id', 'column_id': 'entrez_gene_id', 'number': None, 'type': 'S',
         'description': ''},
        {'info_id': 'GENE_enzyme_ids', 'column_id': 'enzyme_ids', 'number': None, 'type': 'S', 'description': ''},
        {'info_id': 'GENE_', 'column_id': 'external_gene_name', 'number': None, 'type': 'S', 'description': ''},
        {'info_id': 'FATHMM_MAX', 'column_id': 'fathmm_pred_most_damaging', 'number': None, 'type': 'S',
         'description': 'FATHMM Prediction (most damaging)'},
        {'info_id': 'FLAGS', 'column_id': 'flags', 'number': None, 'type': 'S', 'description': 'Flags'},
        {'info_id': 'GENE_function_from_uniprotkb', 'column_id': 'function_from_uniprotkb', 'number': None, 'type': 'S',
         'description': ''},
        {'info_id': 'GENE_family_description', 'column_id': 'gene_family_description', 'number': None, 'type': 'S',
         'description': 'From HGNC database.'},
        {'info_id': 'GENE_family_tag', 'column_id': 'gene_family_tag', 'number': None, 'type': 'S',
         'description': 'From HGNC database.'},
        {'info_id': 'GENE_symbol', 'column_id': 'gene_symbol', 'number': None, 'type': 'S', 'description': ''},
        {'info_id': 'GERP_PP_RS', 'column_id': 'gerp_pp_rs', 'number': None, 'type': 'S', 'description': 'GERP++ RS'},
        {'info_id': 'GNOMAD_AF', 'column_id': 'gnomad_af', 'number': None, 'type': 'F', 'description': 'gnomAD AF'},
        {'info_id': 'GNOMAD_FILTERED', 'column_id': 'gnomad_filtered', 'number': 0, 'type': 'B',
         'description': 'gnomAD Filtered'},
        {'info_id': 'gnomAD_HOM_ALT', 'column_id': 'gnomad_hom_alt', 'number': None, 'type': 'I',
         'description': 'Count of homozygous individuals'},
        {'info_id': 'GNOMAD_POPMAX', 'column_id': 'gnomad_popmax', 'number': None, 'type': 'S',
         'description': 'gnomAD PopMax population'},
        {'info_id': 'GNOMAD_POPMAX_AF', 'column_id': 'gnomad_popmax_af', 'number': None, 'type': 'F',
         'description': 'gnomAD PopMax AF'},
        {'info_id': 'GRANTHAM', 'column_id': 'grantham', 'number': 1, 'type': 'I', 'description': 'Grantham'},
        {'info_id': 'GENE_hgnc_id', 'column_id': 'hgnc_id', 'number': None, 'type': 'S', 'description': 'HGNC Id'},
        {'info_id': 'GENE_hgnc_name', 'column_id': 'hgnc_name', 'number': None, 'type': 'S',
         'description': 'HGNC Name'},
        {'info_id': 'GENE_hgnc_symbol', 'column_id': 'hgnc_symbol', 'number': None, 'type': 'S',
         'description': 'Gene symbol/name from HGNC. The HUGO Gene Nomenclature Committee (HGNC) is the only worldwide authority that assigns standardised nomenclature to human genes.'},
        {'info_id': 'GENE_hgnc_symbol_lower', 'column_id': 'hgnc_symbol_lower', 'number': None, 'type': 'S',
         'description': 'Lower case hgnc_symbol'},
        {'info_id': 'HGVS_C', 'column_id': 'hgvs_c', 'number': None, 'type': 'S', 'description': 'c.HGVS'},
        {'info_id': 'HGVS_P', 'column_id': 'hgvs_p', 'number': None, 'type': 'S', 'description': 'p.HGVS'},
        {'info_id': 'IMPACT', 'column_id': 'impact', 'number': None, 'type': 'S', 'description': 'Impact'},
        {'info_id': 'GENE_in_cancer_gene_census', 'column_id': 'in_cancer_gene_census', 'number': None, 'type': 'S',
         'description': 'Cancer gene census is a list of genes for which mutations have been causally implicated in cancer. It is from the current most release of COSMIC. In SACGF here we only mark genes in the list, and if you want to see more details about those gene (e.g. what kind of tumor the gene causes), check http://cancer.sanger.ac.uk/cancergenome/projects/census/'},
        {'info_id': 'INTERNAL_CLINSIG', 'column_id': 'internally_classified', 'number': None, 'type': 'S',
         'description': 'Internally Classified'},
        {'info_id': 'INTERPRO_DOMAIN', 'column_id': 'interpro_domain', 'number': None, 'type': 'S',
         'description': 'InterPro domain'},
        {'info_id': 'LOF_TOOL', 'column_id': 'loftool', 'number': None, 'type': 'F', 'description': 'LOF Tool'},
        {'info_id': 'Mastermind_MMCNT1', 'column_id': 'mastermind_count_1_cdna', 'number': 1, 'type': 'I',
         'description': "Count of <a href='https://www.genomenon.com/cvr/'>Mastermind</a> articles with cDNA matches for this specific variant"},
        {'info_id': 'Mastermind_MMCNT2', 'column_id': 'mastermind_count_2_cdna_prot', 'number': 1, 'type': 'I',
         'description': "Count of <a href='https://www.genomenon.com/cvr/'>Mastermind</a> articles with variants either explicitly matching at the cDNA level or given only at protein level"},
        {'info_id': 'Mastermind_MMCNT3', 'column_id': 'mastermind_count_3_aa_change', 'number': 1, 'type': 'I',
         'description': "Count of <a href='https://www.genomenon.com/cvr/'>Mastermind</a> articles including other DNA-level variants resulting in the same amino acid change."},
        {'info_id': 'Mastermind_MMID3', 'column_id': 'mastermind_mmid3', 'number': 1, 'type': 'S',
         'description': 'Mastermind MMID3 variant identifier(s), as gene:key'},
        {'info_id': 'MAX_ENT_SCAN_ALT', 'column_id': 'maxentscan_alt', 'number': None, 'type': 'S',
         'description': 'MaxEntScan Alt'},
        {'info_id': 'MAX_ENT_SCAN_DIFF', 'column_id': 'maxentscan_diff', 'number': None, 'type': 'S',
         'description': 'MaxEntScan Diff'},
        {'info_id': 'MAXENTSCAN_PERCENT_DIFF', 'column_id': 'maxentscan_percent_diff_ref', 'number': 1, 'type': 'F',
         'description': 'Combined Annotation Dependent Depletion raw scores'},
        {'info_id': 'MAX_ENT_SCAN_REF', 'column_id': 'maxentscan_ref', 'number': None, 'type': 'S',
         'description': 'MaxEntScan Ref'},
        {'info_id': 'INTERNAL_CLINSIG_MAX', 'column_id': 'max_internal_classification', 'number': None, 'type': 'S',
         'description': 'Max Internal Classification'},
        {'info_id': 'GENE_mgi_id', 'column_id': 'mgi_id', 'number': None, 'type': 'S',
         'description': 'Mouse Genome Informatics ID'},
        {'info_id': 'MUTATION_ASSESSOR_MAX', 'column_id': 'mutation_assessor_pred_most_damaging', 'number': None,
         'type': 'S', 'description': 'Mutation Assessor (Most damaging)'},
        {'info_id': 'MUTATION_TASTER_MAX', 'column_id': 'mutation_taster_pred_most_damaging', 'number': None,
         'type': 'S', 'description': 'Mutation Taster (Most damaging)'},
        {'info_id': 'GENE_omim_id', 'column_id': 'omim_id', 'number': None, 'type': 'S',
         'description': 'Online Mendelian Inheritance in Man Id'},
        {'info_id': 'GENE_omim_phenotypes', 'column_id': 'omim_phenotypes', 'number': None, 'type': 'S',
         'description': 'Online Mendelian Inheritance in Man Phenotypes'},
        {'info_id': 'OVERLAPPING_SYMBOLS', 'column_id': 'overlapping_symbols', 'number': 1, 'type': 'S',
         'description': 'MaxEntScan percent diff/ref'},
        {'info_id': 'GENE_pathway_from_uniprotkb', 'column_id': 'pathway_from_uniprotkb', 'number': None, 'type': 'S',
         'description': ''},
        {'info_id': 'GENE_percentage_gc_content', 'column_id': 'percentage_gc_content', 'number': None, 'type': 'F',
         'description': ''},
        {'info_id': 'GENE_phenotypes_from_ensembl', 'column_id': 'phenotypes_from_ensembl', 'number': None, 'type': 'S',
         'description': 'Phenotype annotation from Ensembl, which incorporates OMIM, Orphanet, and DDG2P. Multiple entries are separated by :: (double colons).'},
        {'info_id': 'POLYPHEN_HVAR_MAX', 'column_id': 'polyphen2_hvar_pred_most_damaging', 'number': None, 'type': 'S',
         'description': 'Poplyphen2 HVAR (Most damaging)'},
        {'info_id': 'GENE_previous_symbols', 'column_id': 'previous_symbols', 'number': None, 'type': 'S',
         'description': ''},
        {'info_id': 'PUBMED', 'column_id': 'pubmed', 'number': None, 'type': 'S', 'description': 'PubMed'},
        {'info_id': 'GENE_refseq_gene_summary', 'column_id': 'refseq_gene_summary', 'number': None, 'type': 'S',
         'description': ''},
        {'info_id': 'REPEAT_MASKER', 'column_id': 'repeat_masker', 'number': None, 'type': 'S',
         'description': 'Repeat masker'},
        {'info_id': 'REVEL_SCORE', 'column_id': 'revel_score', 'number': None, 'type': 'S', 'description': 'REVEL'},
        {'info_id': 'GENE_rgd_id', 'column_id': 'rgd_id', 'number': None, 'type': 'S', 'description': ''},
        {'info_id': 'GENE_rvis_percentile', 'column_id': 'rvis_percentile', 'number': None, 'type': 'S',
         'description': '(Residual Variation Intolerance Score'},
        {'info_id': 'SIFT', 'column_id': 'sift', 'number': 1, 'type': 'S',
         'description': 'Effect prediction of single amino acid substitution by SIFT'},
        {'info_id': 'SpliceAI_pred_DP_AG', 'column_id': 'spliceai_pred_dp_ag', 'number': 1, 'type': 'I',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta position for Acceptor Gain"},
        {'info_id': 'SpliceAI_pred_DP_AL', 'column_id': 'spliceai_pred_dp_al', 'number': 1, 'type': 'I',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta position for Acceptor Loss"},
        {'info_id': 'SpliceAI_pred_DP_DG', 'column_id': 'spliceai_pred_dp_dg', 'number': 1, 'type': 'I',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta position for Donor Gain"},
        {'info_id': 'SpliceAI_pred_DP_DL', 'column_id': 'spliceai_pred_dp_dl', 'number': 1, 'type': 'I',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta position for Donor Loss"},
        {'info_id': 'SpliceAI_pred_DS_AG', 'column_id': 'spliceai_pred_ds_ag', 'number': 1, 'type': 'F',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta score for Acceptor Gain"},
        {'info_id': 'SpliceAI_pred_DS_AL', 'column_id': 'spliceai_pred_ds_al', 'number': 1, 'type': 'F',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta score for Acceptor Loss"},
        {'info_id': 'SpliceAI_pred_DS_DG', 'column_id': 'spliceai_pred_ds_dg', 'number': 1, 'type': 'F',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta score for Donor Gain"},
        {'info_id': 'SpliceAI_pred_DS_DL', 'column_id': 'spliceai_pred_ds_dl', 'number': 1, 'type': 'F',
         'description': "<a href='https://pubmed.ncbi.nlm.nih.gov/30661751/'>SpliceAI</a> delta score for Donor Loss"},
        {'info_id': 'SPLICE_REGION', 'column_id': 'splice_region', 'number': None, 'type': 'S',
         'description': 'Splice Region'},
        {'info_id': 'GENE_START_POSITION', 'column_id': 'start_position', 'number': None, 'type': 'I',
         'description': 'The Ensembl gene start and end coordinates correspond to the outermost transcript start and end coordinates (containing the UTRs). These can be part of the same transcript or belong to two different transcripts. An example of the latter is the human BRCA2 gene, where the start coordinate corresponds to the start coordinate of transcript ENST00000380152 (BRCA2-001) and the end coordinate to the end coordinate of transcript ENST00000544455 (BRCA2-201).'},
        {'info_id': 'GENE_STATUS', 'column_id': 'status', 'number': None, 'type': 'S',
         'description': "From Ensembl. 'KNOWN', 'NOVEL', or 'PUTATIVE'. A known gene or transcript matches to a sequence in a public, scientific database such as UniProtKB and NCBI RefSeq. The match must be for the same species, otherwise the gene is considered to be novel for that species. Putative genes are sequences identical to human ESTs that splice into two or more exons but without an ORF."},
        {'info_id': 'GENE_STRAND', 'column_id': 'strand', 'number': None, 'type': 'S', 'description': 'Gene Strand'},
        {'info_id': 'GENE_synonyms', 'column_id': 'synonyms', 'number': None, 'type': 'S',
         'description': 'Synonyms (From the HGNC)'},
        {'info_id': 'TAGS', 'column_id': 'tags', 'number': None, 'type': 'S', 'description': 'Tags'},
        {'info_id': 'GENE_tissue_specificity_from_uniprotkb', 'column_id': 'tissue_specificity_from_uniprotkb',
         'number': None, 'type': 'S', 'description': 'From Universal Protein Knowledgebase'},
        {'info_id': 'TOPMED_AF', 'column_id': 'topmed_af', 'number': None, 'type': 'F', 'description': 'TOPMed'},
        {'info_id': 'NUM_DB_HET', 'column_id': 'total_db_het', 'number': None, 'type': 'I',
         'description': 'Total Het in DB'},
        {'info_id': 'NUM_DB_HOM', 'column_id': 'total_db_hom', 'number': None, 'type': 'I',
         'description': 'Total Hom in DB'},
        {'info_id': 'TRANSCRIPT_BIOTYPE', 'column_id': 'transcript_biotype', 'number': None, 'type': 'S',
         'description': 'Transcript Biotype'},
        {'info_id': 'GENE_transcript_count', 'column_id': 'transcript_count', 'number': None, 'type': 'S',
         'description': 'The number of transcripts produced by that gene, from Ensembl.'},
        {'info_id': 'GENE_ucsc_id', 'column_id': 'ucsc_id', 'number': None, 'type': 'S', 'description': ''},
        {'info_id': 'GENE_uniprot_id', 'column_id': 'uniprot_id', 'number': None, 'type': 'S',
         'description': 'Universal Protein Knowledgebase. The Swiss-Prot section is used, and it is manually annotated and reviewed and is of high-quality. Official website is www.uniprot.org'},
        {'info_id': 'VARIANT_GRID_ID', 'column_id': 'variant', 'number': 1, 'type': 'S',
         'description': 'VariantGrid ID'},
        {'info_id': 'VARIANT_CLASS', 'column_id': 'variant_class', 'number': None, 'type': 'S',
         'description': 'Variant Class'},
    ]

    bulk_insert_class_data(apps, "annotation", [("ColumnVCFInfo", COLUMN_VCF_INFO)])


def populate_column_vep_fields(apps, schema_editor):
    COLUMN_VEP_FIELD = [
        {'column': 'af_1kg', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'af_1kg',
         'source_field': 'AF', 'category': 'F'},
        {'column': 'af_uk10k', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': None, 'vep_custom': 'u', 'variant_grid_column_id': 'af_uk10k',
         'source_field': 'AF', 'category': 'F'},
        {'column': 'amino_acids', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'amino_acids',
         'source_field': 'Amino_acids', 'category': 'G'},
        {'column': 'cadd_phred', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'cadd_phred',
         'source_field': 'CADD_phred', 'category': 'P'},
        {'column': 'cadd_raw', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'cadd_raw',
         'source_field': 'CADD_raw', 'category': 'P'},
        {'column': 'canonical', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'canonical',
         'source_field': 'CANONICAL', 'category': 'G'},
        {'column': 'codons', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'codons',
         'source_field': 'Codons', 'category': 'G'},
        {'column': 'consequence', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'consequence',
         'source_field': 'Consequence', 'category': 'G'},
        {'column': 'cosmic_count', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': None, 'vep_custom': 'c', 'variant_grid_column_id': 'cosmic_count',
         'source_field': 'CNT', 'category': 'F'},
        {'column': 'cosmic_id', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'Extract COSMIC IDs', 'vep_custom': None,
         'variant_grid_column_id': 'cosmic_id', 'source_field': 'Existing_variation', 'category': 'E'},
        {'column': 'cosmic_legacy_id', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': None, 'vep_custom': 'c', 'variant_grid_column_id': 'cosmic_legacy_id',
         'source_field': 'LEGACY_ID', 'category': 'E'},
        {'column': 'dbscsnv_ada_score', 'vep_plugin': 'v', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'dbscsnv_ada_score',
         'source_field': 'ada_score', 'category': 'S'},
        {'column': 'dbscsnv_rf_score', 'vep_plugin': 'v', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'dbscsnv_rf_score',
         'source_field': 'rf_score', 'category': 'S'},
        {'column': 'dbsnp_rs_id', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'Extract rsIDs', 'vep_custom': None,
         'variant_grid_column_id': 'dbsnp_rs_id', 'source_field': 'Existing_variation', 'category': 'E'},
        {'column': 'distance', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'distance',
         'source_field': 'DISTANCE', 'category': 'N'},
        {'column': 'domains', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'domains',
         'source_field': 'DOMAINS', 'category': 'D'},
        {'column': 'ensembl_protein', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'ensembl_protein',
         'source_field': 'ENSP', 'category': 'E'},
        {'column': 'exon', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'exon',
         'source_field': 'EXON', 'category': 'G'},
        {'column': 'fathmm_pred', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'fathmm_pred',
         'source_field': 'FATHMM_pred', 'category': 'P'},
        {'column': 'fathmm_pred_most_damaging', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'Most damaging', 'vep_custom': None,
         'variant_grid_column_id': 'fathmm_pred_most_damaging', 'source_field': 'FATHMM_pred', 'category': 'P'},
        {'column': 'flags', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'flags',
         'source_field': 'FLAGS', 'category': 'G'},
        {'column': 'gerp_pp_rs', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'gerp_pp_rs',
         'source_field': 'GERP++_RS', 'category': 'C'},
        {'column': 'gnomad_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_af', 'source_field': 'AF', 'category': 'F'},
        {'column': 'gnomad_afr_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_afr_af', 'source_field': 'AF_afr', 'category': 'F'},
        {'column': 'gnomad_amr_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_amr_af', 'source_field': 'AF_amr', 'category': 'F'},
        {'column': 'gnomad_asj_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_asj_af', 'source_field': 'AF_asj', 'category': 'F'},
        {'column': 'gnomad_eas_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_eas_af', 'source_field': 'AF_eas', 'category': 'F'},
        {'column': 'gnomad_filtered', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': 'Filtered in either exome or genomes VCF', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_filtered', 'source_field': 'gnomad_filtered', 'category': 'F'},
        {'column': 'gnomad_fin_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_fin_af', 'source_field': 'AF_fin', 'category': 'F'},
        {'column': 'gnomad_hom_alt', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': 'exome_nhomalt + genome_nhomalt', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_hom_alt', 'source_field': 'nhomalt', 'category': 'F'},
        {'column': 'gnomad_nfe_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_nfe_af', 'source_field': 'AF_nfe', 'category': 'F'},
        {'column': 'gnomad_oth_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': None, 'vep_custom': 'g', 'variant_grid_column_id': 'gnomad_oth_af',
         'source_field': 'AF_oth', 'category': 'F'},
        {'column': 'gnomad_popmax', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': None, 'vep_custom': 'g', 'variant_grid_column_id': 'gnomad_popmax',
         'source_field': 'popmax', 'category': 'F'},
        {'column': 'gnomad_popmax_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': 'Re-calculated from max (exome_AC+genome_AC)/(exome_AN+genome_AN)',
         'vep_custom': 'g', 'variant_grid_column_id': 'gnomad_popmax_af', 'source_field': 'AF_popmax', 'category': 'F'},
        {'column': 'gnomad_sas_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': '(exome_AC+genome_AC)/(exome_AN+genome_AN)', 'vep_custom': 'g',
         'variant_grid_column_id': 'gnomad_sas_af', 'source_field': 'AF_sas', 'category': 'F'},
        {'column': 'grantham', 'vep_plugin': 'g', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'grantham',
         'source_field': 'Grantham', 'category': 'P'},
        {'column': 'hgnc_id', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'hgnc_id',
         'source_field': 'HGNC_ID', 'category': 'E'},
        {'column': 'hgvs_c', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'hgvs_c',
         'source_field': 'HGVSc', 'category': 'H'},
        {'column': 'hgvs_p', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'hgvs_p',
         'source_field': 'HGVSp', 'category': 'H'},
        {'column': 'impact', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'impact',
         'source_field': 'IMPACT', 'category': 'P'},
        {'column': 'interpro_domain', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'interpro_domain',
         'source_field': 'Interpro_domain', 'category': 'D'},
        {'column': 'intron', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'intron',
         'source_field': 'INTRON', 'category': 'G'},
        {'column': 'loftool', 'vep_plugin': 'l', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'loftool',
         'source_field': 'LoFtool', 'category': 'P'},
        {'column': 'mastermind_count_1_cdna', 'vep_plugin': 'n', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'MMCNT1', 'vep_custom': None,
         'variant_grid_column_id': 'mastermind_count_1_cdna', 'source_field': 'Mastermind_counts', 'category': 'L'},
        {'column': 'mastermind_count_2_cdna_prot', 'vep_plugin': 'n', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'MMCNT2', 'vep_custom': None,
         'variant_grid_column_id': 'mastermind_count_2_cdna_prot', 'source_field': 'Mastermind_counts',
         'category': 'L'},
        {'column': 'mastermind_count_3_aa_change', 'vep_plugin': 'n', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'MMCNT3', 'vep_custom': None,
         'variant_grid_column_id': 'mastermind_count_3_aa_change', 'source_field': 'Mastermind_counts',
         'category': 'L'},
        {'column': 'mastermind_mmid3', 'vep_plugin': 'n', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'mastermind_mmid3',
         'source_field': 'Mastermind_MMID3', 'category': 'L'},
        {'column': 'maxentscan_alt', 'vep_plugin': 'm', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'maxentscan_alt',
         'source_field': 'MaxEntScan_alt', 'category': 'S'},
        {'column': 'maxentscan_diff', 'vep_plugin': 'm', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'maxentscan_diff',
         'source_field': 'MaxEntScan_diff', 'category': 'S'},
        {'column': 'maxentscan_ref', 'vep_plugin': 'm', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'maxentscan_ref',
         'source_field': 'MaxEntScan_ref', 'category': 'S'},
        {'column': 'mutation_assessor_pred', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'mutation_assessor_pred', 'source_field': 'MutationAssessor_pred', 'category': 'P'},
        {'column': 'mutation_assessor_pred_most_damaging', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'Most damaging', 'vep_custom': None,
         'variant_grid_column_id': 'mutation_assessor_pred_most_damaging', 'source_field': 'MutationAssessor_pred',
         'category': 'P'},
        {'column': 'mutation_taster_pred', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'mutation_taster_pred', 'source_field': 'MutationTaster_pred', 'category': 'P'},
        {'column': 'mutation_taster_pred_most_damaging', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'Most damaging', 'vep_custom': None,
         'variant_grid_column_id': 'mutation_taster_pred_most_damaging', 'source_field': 'MutationTaster_pred',
         'category': 'P'},
        {'column': 'phastcons_100_way_vertebrate', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'max() for indels', 'vep_custom': '1',
         'variant_grid_column_id': 'phastcons_100_way_vertebrate', 'source_field': 'phastCons100way_vertebrate',
         'category': 'C'},
        {'column': 'phastcons_30_way_mammalian', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'max() for indels', 'vep_custom': '2',
         'variant_grid_column_id': 'phastcons_30_way_mammalian', 'source_field': 'phastCons30way_mammalian',
         'category': 'C'},
        {'column': 'phastcons_46_way_mammalian', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'max() for indels', 'vep_custom': '3',
         'variant_grid_column_id': 'phastcons_46_way_mammalian', 'source_field': 'phastCons46way_mammalian',
         'category': 'C'},
        {'column': 'phylop_100_way_vertebrate', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'max() for indels', 'vep_custom': '4',
         'variant_grid_column_id': 'phylop_100_way_vertebrate', 'source_field': 'phyloP100way_vertebrate',
         'category': 'C'},
        {'column': 'phylop_30_way_mammalian', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'max() for indels', 'vep_custom': '5',
         'variant_grid_column_id': 'phylop_30_way_mammalian', 'source_field': 'phyloP30way_mammalian', 'category': 'C'},
        {'column': 'phylop_46_way_mammalian', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'max() for indels', 'vep_custom': '6',
         'variant_grid_column_id': 'phylop_46_way_mammalian', 'source_field': 'phyloP46way_mammalian', 'category': 'C'},
        {'column': 'polyphen2_hvar_pred', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'polyphen2_hvar_pred', 'source_field': 'Polyphen2_HVAR_pred', 'category': 'P'},
        {'column': 'polyphen2_hvar_pred_most_damaging', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'Most damaging', 'vep_custom': None,
         'variant_grid_column_id': 'polyphen2_hvar_pred_most_damaging', 'source_field': 'Polyphen2_HVAR_pred',
         'category': 'P'},
        {'column': 'protein_position', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'protein_position',
         'source_field': 'Protein_position', 'category': 'G'},
        {'column': 'pubmed', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'pubmed',
         'source_field': 'PUBMED', 'category': 'L'},
        {'column': 'repeat_masker', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': 'r', 'variant_grid_column_id': 'repeat_masker',
         'source_field': 'REPEAT_MASKER', 'category': 'Q'},
        {'column': 'revel_score', 'vep_plugin': 'd', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'revel_score',
         'source_field': 'REVEL_score', 'category': 'P'},
        {'column': 'sift', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'sift',
         'source_field': 'SIFT', 'category': 'P'},
        {'column': 'somatic', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': 'Any values present', 'vep_custom': None,
         'variant_grid_column_id': 'somatic', 'source_field': 'SOMATIC', 'category': 'E'},
        {'column': 'spliceai_pred_dp_ag', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_dp_ag', 'source_field': 'SpliceAI_pred_DP_AG', 'category': 'S'},
        {'column': 'spliceai_pred_dp_al', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_dp_al', 'source_field': 'SpliceAI_pred_DP_AL', 'category': 'S'},
        {'column': 'spliceai_pred_dp_dg', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_dp_dg', 'source_field': 'SpliceAI_pred_DP_DG', 'category': 'S'},
        {'column': 'spliceai_pred_dp_dl', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_dp_dl', 'source_field': 'SpliceAI_pred_DP_DL', 'category': 'S'},
        {'column': 'spliceai_pred_ds_ag', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_ds_ag', 'source_field': 'SpliceAI_pred_DS_AG', 'category': 'S'},
        {'column': 'spliceai_pred_ds_al', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_ds_al', 'source_field': 'SpliceAI_pred_DS_AL', 'category': 'S'},
        {'column': 'spliceai_pred_ds_dg', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_ds_dg', 'source_field': 'SpliceAI_pred_DS_DG', 'category': 'S'},
        {'column': 'spliceai_pred_ds_dl', 'vep_plugin': 'a', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None,
         'variant_grid_column_id': 'spliceai_pred_ds_dl', 'source_field': 'SpliceAI_pred_DS_DL', 'category': 'S'},
        {'column': 'splice_region', 'vep_plugin': 's', 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'splice_region',
         'source_field': 'SpliceRegion', 'category': 'S'},
        {'column': 'swissprot', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'swissprot',
         'source_field': 'SWISSPROT', 'category': 'E'},
        {'column': 'symbol', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'symbol',
         'source_field': 'SYMBOL', 'category': 'G'},
        {'column': 'symbol_source', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'symbol_source',
         'source_field': 'SYMBOL_SOURCE', 'category': 'G'},
        {'column': 'topmed_af', 'vep_plugin': None, 'source_field_has_custom_prefix': True,
         'source_field_processing_description': None, 'vep_custom': 't', 'variant_grid_column_id': 'topmed_af',
         'source_field': 'TOPMED', 'category': 'F'},
        {'column': 'trembl', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'trembl',
         'source_field': 'TREMBL', 'category': 'E'},
        {'column': 'uniparc', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'uniparc',
         'source_field': 'UNIPARC', 'category': 'E'},
        {'column': 'variant_class', 'vep_plugin': None, 'source_field_has_custom_prefix': False,
         'source_field_processing_description': None, 'vep_custom': None, 'variant_grid_column_id': 'variant_class',
         'source_field': 'VARIANT_CLASS', 'category': 'G'},
    ]

    bulk_insert_class_data(apps, "annotation", [("ColumnVEPField", COLUMN_VEP_FIELD)])


class Migration(migrations.Migration):
    dependencies = [
        ('annotation', '0002_auto_20200929_1503'),
        ('snpdb', '0002_initial_data'),  # Need VariantGridColumns inserted
    ]

    operations = [
        migrations.RunPython(populate_mutational_signature_info),
        migrations.RunPython(populate_column_vcf_info),
        migrations.RunPython(populate_column_vep_fields),
    ]
