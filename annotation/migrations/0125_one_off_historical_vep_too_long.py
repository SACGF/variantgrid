# Generated by Django 4.2.18 on 2025-01-29 00:48
import logging

from django.db import migrations
from django.db.models.functions import Abs


def _one_off_historical_vep_too_long(apps, schema_editor):
    Variant = apps.get_model("snpdb", "Variant")
    VariantAnnotation = apps.get_model("annotation", "VariantAnnotation")

    VEP_SKIPPED_UNKNOWN = 'u'
    VEP_SKIPPED_TOO_LONG = 'l'

    qs = Variant.objects.filter(svlen__isnull=False).annotate(abs_svlen=Abs("svlen"))
    qs_long_variants = qs.filter(abs_svlen__gte=10_000_000)
    qs_qa_long = VariantAnnotation.objects.filter(variant__in=qs_long_variants,
                                                  vep_skipped_reason=VEP_SKIPPED_UNKNOWN)
    if ret := qs_qa_long.update(vep_skipped_reason=VEP_SKIPPED_TOO_LONG):
        logging.info("Updated %d VEP skipped variants to TOO_LONG ", ret)


class Migration(migrations.Migration):

    dependencies = [
        ('annotation', '0124_alter_variantannotation_vep_skipped_reason'),
    ]

    operations = [
        migrations.RunPython(_one_off_historical_vep_too_long)
    ]
