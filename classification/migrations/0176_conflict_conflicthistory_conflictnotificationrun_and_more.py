# Generated by Django 4.2.17 on 2025-10-08 23:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import library.preview_request


class Migration(migrations.Migration):

    dependencies = [
        ('review', '0004_review_is_complete'),
        ('snpdb', '0170_merge_20250924_1038'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('classification', '0175_remove_classificationgrouping_allele_origin_bucket'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conflict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('conflict_type', models.CharField(choices=[('S', 'ClinSig'), ('P', 'OncPath')], max_length=1)),
                ('allele_origin_bucket', models.CharField(blank=True, choices=[('G', 'Germline'), ('S', 'Somatic'), ('U', 'Unknown')], max_length=1, null=True)),
                ('testing_context_bucket', models.CharField(blank=True, choices=[('N', 'Non-Cancer Somatic'), ('H', 'Haematology'), ('S', 'Solid Tumour'), ('O', 'Other'), ('G', 'Germline'), ('U', 'Unknown')], max_length=1, null=True)),
                ('tumor_type_category', models.TextField(blank=True, null=True)),
                ('meta_data', models.JSONField(default=dict)),
                ('allele', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.allele')),
                ('reviews', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='review.reviewedobject')),
            ],
            bases=(library.preview_request.PreviewModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ConflictHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('data', models.JSONField()),
                ('severity', models.IntegerField(choices=[(0, 'No Submissions'), (1, 'Single Submitter'), (2, 'Same Values'), (3, 'Resolution Differences'), (4, 'Small Diffs'), (5, 'Discordance'), (6, 'Medical Significance Discordance')])),
                ('is_latest', models.BooleanField(default=False)),
                ('conflict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.conflict')),
            ],
        ),
        migrations.CreateModel(
            name='ConflictNotificationRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.TextField(choices=[('Q', 'Queued'), ('P', 'Processing'), ('C', 'Complete')], default='Q')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='classificationgrouping',
            name='latest_cached_summary',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name='alleleorigingrouping',
            name='testing_context_bucket',
            field=models.CharField(choices=[('N', 'Non-Cancer Somatic'), ('H', 'Haematology'), ('S', 'Solid Tumour'), ('O', 'Other'), ('G', 'Germline'), ('U', 'Unknown')], default='U', max_length=1),
        ),
        migrations.CreateModel(
            name='ConflictNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('conflict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.conflict')),
                ('current_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='classification.conflicthistory')),
                ('notification_run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classification.conflictnotificationrun')),
                ('previous_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='classification.conflicthistory')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConflictComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('comment', models.TextField()),
                ('meta_data', models.JSONField(default=dict)),
                ('conflict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.conflict')),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='snpdb.lab')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConflictLab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('active', models.BooleanField(default=True)),
                ('status', models.TextField(choices=[('P', 'Pending Triage'), ('F', 'Will Amend'), ('D', 'For Joint Discussion'), ('R', 'Confident in Classification'), ('X', 'Low Penetrance/Risk Allele etc')], default='P')),
                ('classification_grouping', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='classification.classificationgrouping')),
                ('conflict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.conflict')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.lab')),
            ],
            options={
                'unique_together': {('conflict', 'lab')},
            },
        ),
        migrations.AddIndex(
            model_name='conflicthistory',
            index=models.Index(fields=['conflict', 'is_latest'], name='classificat_conflic_197ad4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conflict',
            unique_together={('allele', 'conflict_type', 'allele_origin_bucket', 'testing_context_bucket', 'tumor_type_category')},
        ),
    ]
