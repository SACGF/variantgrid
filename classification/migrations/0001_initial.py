# Generated by Django 3.1 on 2020-09-29 05:34

import datetimeutc.fields
import django.db.models.deletion
import django_extensions.db.fields
from django.conf import settings
from django.db import migrations, models

import classification.models.evidence_mixin
import library.django_utils.django_file_system_storage
import library.django_utils.guardian_permissions_mixin
import library.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('flags', '0001_initial'),
        ('snpdb', '0001_initial'),
        ('annotation', '0002_auto_20200929_1503'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicalContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, choices=[('C', 'Concordant'), ('D', '*Discordant*')], null=True)),
                ('last_evaluation', models.JSONField(blank=True, null=True)),
                ('allele', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.allele')),
                ('flag_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='flags.flagcollection')),
            ],
            options={
                'unique_together': {('allele', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DiscordanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('resolution', models.TextField(blank=True, choices=[('C', 'Concordant'), ('D', 'Continued Discordance')], default=None, max_length=1, null=True)),
                ('continued_discordance_reason', models.TextField(blank=True, choices=[('U', 'One or more labs was unresponsive'), ('D', 'Different curation methods are being employed')], max_length=1, null=True)),
                ('continued_discordance_text', models.TextField(blank=True, null=True)),
                ('report_started_date', models.DateTimeField(auto_now_add=True)),
                ('report_completed_date', models.DateTimeField(blank=True, null=True)),
                ('cause_text', models.TextField(blank=True, default='')),
                ('clinical_context', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='classification.clinicalcontext')),
                ('report_closed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VariantClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('chgvs_grch37', models.TextField(blank=True, null=True)),
                ('chgvs_grch38', models.TextField(blank=True, null=True)),
                ('chgvs_grch37_full', models.TextField(blank=True, null=True)),
                ('chgvs_grch38_full', models.TextField(blank=True, null=True)),
                ('share_level', models.CharField(choices=[('user', 'CURRENT_USER'), ('lab', 'LAB'), ('institution', 'INSTITUTION'), ('logged_in_users', 'ALL_USERS'), ('public', 'PUBLIC')], default='lab', max_length=16)),
                ('lab_record_id', models.TextField(blank=True, null=True)),
                ('evidence', models.JSONField(blank=True, default=library.utils.empty_dict)),
                ('withdrawn', models.BooleanField(default=False)),
                ('clinical_significance', models.CharField(blank=True, choices=[('0', 'Other'), ('1', 'Benign'), ('2', 'Likely Benign'), ('3', 'VUS'), ('4', 'Likely Pathogenic'), ('5', 'Pathogenic')], max_length=1, null=True)),
                ('annotation_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='annotation.annotationversion')),
                ('clinical_context', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classification.clinicalcontext')),
                ('flag_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='flags.flagcollection')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.lab')),
                ('sample', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='snpdb.sample')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('variant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='snpdb.variant')),
            ],
            bases=(library.django_utils.guardian_permissions_mixin.GuardianPermissionsMixin, classification.models.evidence_mixin.EvidenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VariantClassificationImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VariantClassificationModification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', datetimeutc.fields.DateTimeUTCField(auto_now_add=True, db_index=True)),
                ('modified', datetimeutc.fields.DateTimeUTCField(auto_now=True)),
                ('source', models.TextField()),
                ('delta', models.JSONField(blank=True, default=library.utils.empty_dict)),
                ('published', models.BooleanField(default=False)),
                ('published_evidence', models.JSONField(blank=True, default=None, null=True)),
                ('share_level', models.CharField(blank=True, choices=[('user', 'CURRENT_USER'), ('lab', 'LAB'), ('institution', 'INSTITUTION'), ('logged_in_users', 'ALL_USERS'), ('public', 'PUBLIC')], max_length=16, null=True)),
                ('clinical_significance', models.CharField(blank=True, choices=[('0', 'Other'), ('1', 'Benign'), ('2', 'Likely Benign'), ('3', 'VUS'), ('4', 'Likely Pathogenic'), ('5', 'Pathogenic')], max_length=1, null=True)),
                ('is_last_published', models.BooleanField(blank=True, db_index=True, default=False)),
                ('is_last_edited', models.BooleanField(blank=True, db_index=True, default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('variant_classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.variantclassification')),
            ],
            bases=(library.django_utils.guardian_permissions_mixin.GuardianPermissionsMixin, classification.models.evidence_mixin.EvidenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VariantClassificationImportAlleleSource',
            fields=[
                ('allelesource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='snpdb.allelesource')),
                ('variant_classification_import', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='classification.variantclassificationimport')),
            ],
            bases=('snpdb.allelesource',),
        ),
        migrations.CreateModel(
            name='VariantClassificationAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=library.django_utils.django_file_system_storage.PrivateUploadStorage(), upload_to='classification_attachments')),
                ('file_type', models.CharField(choices=[('I', 'Image'), ('P', 'Image'), ('W', 'Word Doc'), ('T', 'Text'), ('S', 'Spreadsheet'), ('O', 'Image')], max_length=1)),
                ('thumbnail_path', models.TextField(null=True)),
                ('variant_classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.variantclassification')),
            ],
        ),
        migrations.AddField(
            model_name='variantclassification',
            name='variant_classification_import',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='classification.variantclassificationimport'),
        ),
        migrations.CreateModel(
            name='EvidenceKey',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('key', models.TextField(primary_key=True, serialize=False)),
                ('mandatory', models.BooleanField(default=False)),
                ('max_share_level', models.CharField(choices=[('user', 'CURRENT_USER'), ('lab', 'LAB'), ('institution', 'INSTITUTION'), ('logged_in_users', 'ALL_USERS'), ('public', 'PUBLIC')], default='logged_in_users', max_length=16)),
                ('order', models.IntegerField(default=0)),
                ('label', models.TextField(blank=True, null=True)),
                ('sub_label', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('examples', models.JSONField(blank=True, null=True)),
                ('options', models.JSONField(blank=True, null=True)),
                ('see', models.TextField(blank=True, null=True)),
                ('evidence_category', models.CharField(choices=[('V', 'Variant'), ('H', 'Gene'), ('HP', 'Patient'), ('HT', 'Test'), ('P', 'Population Data'), ('CP', 'Computational and Predictive Data'), ('F', 'Functional Data'), ('S', 'Segregation Data'), ('D', 'De novo Data'), ('A', 'Allelic Data'), ('DB', 'Other Database'), ('O', 'Other Data'), ('L', 'Literature'), ('HI', 'Interpretation'), ('SO', 'Sign Off')], max_length=3)),
                ('value_type', models.CharField(blank=True, choices=[('A', 'age'), ('T', 'free text (multi-line)'), ('F', 'free text'), ('S', 'select'), ('M', 'multi-select'), ('B', 'boolean'), ('D', 'date'), ('C', 'criteria'), ('U', 'user'), ('P', 'percent'), ('N', 'unit (0 to 1)'), ('I', 'integer'), ('L', 'float')], default='F', max_length=1)),
                ('default_crit_evaluation', models.TextField(blank=True, choices=[('BS', 'Benign Strong'), ('BP', 'Benign Supporting'), ('BA', 'Benign Standalone'), ('N', 'Neutral'), ('PP', 'Pathogenic Supporting'), ('PM', 'Pathogenic Moderate'), ('PS', 'Pathogenic Strong'), ('PVS', 'Pathogenic Very Strong')], max_length=3, null=True)),
                ('allow_custom_values', models.BooleanField(blank=True, default=False)),
                ('hide', models.BooleanField(blank=True, default=False)),
                ('immutable', models.BooleanField(blank=True, default=False)),
                ('copy_consensus', models.BooleanField(blank=True, default=True)),
                ('variantgrid_column', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='snpdb.variantgridcolumn')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscordanceReportClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('withdrawn_final', models.BooleanField(default=False)),
                ('classification_final', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='classification.variantclassificationmodification')),
                ('classification_original', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='classification.variantclassificationmodification')),
                ('clinical_context_final', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='classification.clinicalcontext')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.discordancereport')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AllClassificationsAlleleSource',
            fields=[
                ('allelesource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='snpdb.allelesource')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('script', models.TextField()),
                ('git_hash', models.TextField()),
                ('genome_build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.genomebuild')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('snpdb.allelesource', models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='variantclassification',
            unique_together={('lab', 'lab_record_id')},
        ),
    ]
