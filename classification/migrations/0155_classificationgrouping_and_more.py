# Generated by Django 4.2.15 on 2024-08-30 06:19

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('genes', '0078_alter_genesymbolalias_unique_together_and_more'),
        ('snpdb', '0143_one_off_rename_clinvar_variantgridcolumns'),
        ('ontology', '0027_alter_ontologyterm_ontology_service'),
        ('classification', '0154_alter_importedalleleinfo_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassificationGrouping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('allele_origin_bucket', models.CharField(choices=[('G', 'Germline'), ('S', 'Somatic'), ('U', 'Unknown')], max_length=1)),
                ('share_level', models.CharField(choices=[('user', 'CURRENT_USER'), ('lab', 'LAB'), ('institution', 'INSTITUTION'), ('logged_in_users', 'ALL_USERS'), ('public', 'PUBLIC')], max_length=16)),
                ('quality_level', models.CharField(choices=[('S', 'Standard'), ('L', 'Legacy'), ('I', 'Incomplete')], default='S', max_length=1)),
                ('classification_bucket', models.CharField(choices=[('B', 'Benign'), ('V', 'VUS'), ('P', 'Pathogenic'), ('O', 'Oncogenic'), ('X', 'Other'), ('C', 'Conflicting'), ('N', 'No Data')], default='N', max_length=1)),
                ('classification_count', models.IntegerField(default=0)),
                ('dirty', models.BooleanField(default=True)),
                ('classification_values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), blank=True, null=True, size=None)),
                ('somatic_clinical_significance_values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), blank=True, null=True, size=None)),
                ('conditions', models.JSONField(blank=True, null=True)),
                ('zygosity_values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, null=True, size=None)),
                ('latest_criteria', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, null=True, size=None)),
                ('latest_curation_date', models.DateField(blank=True, null=True)),
                ('allele', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.allele')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snpdb.lab')),
                ('latest_allele_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classification.importedalleleinfo')),
                ('latest_classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classification.classificationmodification')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassificationGroupingGeneSymbol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('gene_symbol', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='genes.genesymbol')),
                ('grouping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.classificationgrouping')),
            ],
            options={
                'unique_together': {('grouping', 'gene_symbol')},
            },
        ),
        migrations.CreateModel(
            name='ClassificationGroupingEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.classification')),
                ('grouping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.classificationgrouping')),
            ],
            options={
                'unique_together': {('grouping', 'classification')},
            },
        ),
        migrations.CreateModel(
            name='ClassificationGroupingConditions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('grouping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.classificationgrouping')),
                ('ontology_term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ontology.ontologyterm')),
            ],
            options={
                'unique_together': {('grouping', 'ontology_term')},
            },
        ),
    ]
