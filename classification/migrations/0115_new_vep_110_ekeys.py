# Generated by Django 4.2.9 on 2024-01-24 03:24

from django.db import migrations

def _new_vep_110_ekeys(apps, _schema_editor):
    EvidenceKey = apps.get_model("classification", "EvidenceKey")
    VariantGridColumn = apps.get_model("snpdb", "VariantGridColumn")

    UNIT = 'N'
    FREE_ENTRY = 'F'

    category_comp_pred = 'CP'
    category_func_data = 'F'

    order_alphamissense = 5  # aloft / bayesdel - will sort alphabetical
    order_mave = 10  # before Pfam

    new_ekeys = [
        # Put gnomAD ones next to other gnomAD OE/LOF
        EvidenceKey(
            **{'key': 'alphamissense_rankscore', 'mandatory': False, 'max_share_level': 'logged_in_users',
               'order': order_alphamissense, 'label': 'AlphaMissense Rankscore',
               'description': 'AlphaMissense Pathogenicity Prediction Rankscore',
               'examples': [0.1, 0.89], 'options': [],
               'evidence_category': category_comp_pred, 'value_type': UNIT,
               'variantgrid_column_id': "alphamissense_rankscore"}),
        EvidenceKey(
            **{'key': 'mavedb', 'mandatory': False, 'max_share_level': 'logged_in_users', 'order': order_mave,
               'label': 'MaveDB',
               'description': 'Multiplexed Assays of Variant Effect (MAVEs)',
               'examples': "urn:mavedb:00000049", 'options': [],
               'evidence_category': category_func_data, 'value_type': FREE_ENTRY,
               'see': "https://www.mavedb.org", 'variantgrid_column_id': "mavedb_urn"}),
    ]
    EvidenceKey.objects.bulk_create(new_ekeys)

    # Hemi count already exists - we can populate it now
    EvidenceKey.objects.filter(pk='gnomad_hemi_count').update(variantgrid_column_id='gnomad_hemi_count')

    # This was a mistake - fixing bug (also fixed in original migration)
    VariantGridColumn.objects.filter(pk='alphamissense_rankscore').update(annotation_level='A')


def _reverse__new_vep_110_ekeys(apps, _schema_editor):
    EvidenceKey = apps.get_model("classification", "EvidenceKey")

    NEW_EKEYS = [
        'alphamissense_rankscore', 'mavedb'
    ]
    EvidenceKey.objects.filter(pk__in=NEW_EKEYS).delete()
    EvidenceKey.objects.filter(pk='gnomad_hemi_count').update(variantgrid_column_id=None)


class Migration(migrations.Migration):

    dependencies = [
        ('classification', '0114_classification_withdraw_reason'),
    ]

    operations = [
        migrations.RunPython(_new_vep_110_ekeys, reverse_code=_reverse__new_vep_110_ekeys)
    ]
