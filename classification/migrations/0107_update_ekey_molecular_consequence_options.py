# Generated by Django 4.2.2 on 2023-08-24 07:23

from django.db import migrations


def _update_ekey_molecular_consequence_options(apps, _schema_editor):
    """ This can be deleted if there is a blat_keys migration after it """
    EvidenceKey = apps.get_model("classification", "EvidenceKey")
    ekey = EvidenceKey.objects.get(pk='molecular_consequence')
    # New rows - see https://github.com/SACGF/variantgrid_private/issues/2484#issuecomment-1691139972
    new_rows = [{'so': 'SO:0001787',
                 'key': 'splice_donor_5th_base_variant',
                 'index': 38,
                 'label': 'Splice donor 5th base variant'},
                {'so': 'SO:0002170',
                 'key': 'splice_donor_region_variant',
                 'index': 39,
                 'label': 'Splice donor region variant'},
                {'so': 'SO:0002169',
                 'key': 'splice_polypyrimidine_tract_variant',
                 'index': 40,
                 'label': 'Splice polypyrimidine tract variant'},
                {'so': 'SO:0001620',
                 'key': 'mature_miRNA_variant',
                 'index': 41,
                 'label': 'Mature miRNA variant'},
                {'so': 'SO:0001623',
                 'key': '5_prime_UTR_variant',
                 'index': 42,
                 'label': '5 prime UTR variant'},
                {'so': 'SO:0001624',
                 'key': '3_prime_UTR_variant',
                 'index': 43,
                 'label': '3 prime UTR variant'},
                {'so': 'SO:0001621',
                 'key': 'NMD_transcript_variant',
                 'index': 44,
                 'label': 'NMD transcript variant'},
                {'so': 'SO:0001968',
                 'key': 'coding_transcript_variant',
                 'index': 45,
                 'label': 'Coding transcript variant'},
                {'so': 'SO:0001895',
                 'key': 'TFBS_ablation',
                 'index': 46,
                 'label': 'TFBS ablation'},
                {'so': 'SO:0001892',
                 'key': 'TFBS_amplification',
                 'index': 47,
                 'label': 'TFBS amplification'},
                {'so': 'SO:0001782',
                 'key': 'TF_binding_site_variant',
                 'index': 48,
                 'label': 'TF binding site variant'},
                {'so': 'SO:0001060',
                 'key': 'sequence_variant',
                 'index': 49,
                 'label': 'Sequence variant'}]

    ekey.options.extend(new_rows)
    ekey.save()

class Migration(migrations.Migration):

    dependencies = [
        ('classification', '0106_discordancenotification'),
    ]

    operations = [
        migrations.RunPython(_update_ekey_molecular_consequence_options)
    ]
