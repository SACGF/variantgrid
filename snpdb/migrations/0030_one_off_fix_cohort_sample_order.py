# Generated by Django 3.1.3 on 2021-04-08 09:00

from django.db import migrations
from django.db.models import F, Max, Value


def _one_off_fix_cohort_sample_order(apps, _schema_editor):
    Sample = apps.get_model("snpdb", "Sample")
    Cohort = apps.get_model("snpdb", "Cohort")
    CohortSample = apps.get_model("snpdb", "CohortSample")

    for cohort in Cohort.objects.filter(vcf__isnull=True):
        # Fix incorrectly remaining a sub cohort variangrid_private issue #2216
        if cohort.parent_cohort:
            my_samples = Sample.objects.filter(cohortsample__cohort=cohort).order_by("pk")
            parent_samples = Sample.objects.filter(cohortsample__cohort=cohort.parent_cohort).order_by("pk")
            if my_samples.exclude(pk__in=parent_samples).exists():
                print(f"Cohort {cohort.name} ({cohort.pk}) set to not a sub cohort")
                cohort.parent_cohort = None  # No longer a sub cohort
                cohort.save()

        # Fix issue #325 - sample order mixups
        out_of_order = False
        for i, cs in enumerate(cohort.cohortsample_set.order_by("sample")):
            if i != cs.cohort_genotype_packed_field_index:
                out_of_order = True
                break

        if out_of_order:
            if cohort.parent_cohort:  # Only these ones would have been wrong (sub cohorts use parent indexes)
                print(f"Cohort {cohort.name} ({cohort.pk}) has wrong pack order - fixing")
            qs = cohort.cohortsample_set.all()
            data = qs.aggregate(highest_value=Max("cohort_genotype_packed_field_index"))
            if highest_packed_index := data["highest_value"]:
                # packed fields are unique per cohort so need to move them sufficiently high to be able to rearrange
                out_of_range = F("cohort_genotype_packed_field_index") + Value(highest_packed_index + 1)
                cohort.cohortsample_set.all().update(cohort_genotype_packed_field_index=out_of_range)

                # Cohort genotype packed fields are in sample order
                cohort_samples = []
                for i, cs in enumerate(cohort.cohortsample_set.order_by("sample")):
                    cs.cohort_genotype_packed_field_index = i
                    cohort_samples.append(cs)
                if cohort_samples:
                    # Do a bulk update so it doesn't trigger a save then call this func again
                    CohortSample.objects.bulk_update(cohort_samples, ["cohort_genotype_packed_field_index"])


class Migration(migrations.Migration):

    dependencies = [
        ('snpdb', '0029_legacy_vcf_allele_frequency_percent'),
    ]

    operations = [
        migrations.RunPython(_one_off_fix_cohort_sample_order)
    ]
