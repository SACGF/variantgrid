# Generated by Django 4.2.10 on 2024-03-20 00:35

from django.db import migrations
from django.db.models import Max, F

from library.django_utils import bulk_insert_class_data

_NEW_SV_COLUMNS = ["gnomad_sv_overlap_af", "gnomad_sv_overlap_percent", "gnomad_sv_overlap_name"]


def _fix_issue_1010(apps, _schema_editor):
    # @see https://github.com/SACGF/variantgrid/issues/1010

    VARIANT_LEVEL = 'V'

    VariantGridColumn = apps.get_model("snpdb", "VariantGridColumn")
    VariantGridColumn.objects.filter(grid_column_name='alphamissense_rankscore').update(annotation_level=VARIANT_LEVEL)


def _new_gnomad_sv_columns(apps, _schema_editor):
    VARIANT_LEVEL = 'V'

    NEW_VARIANT_GRID_COLUMNS = [
        {'grid_column_name': 'gnomad_sv_overlap_af',
         'variant_column': 'variantannotation__gnomad_sv_overlap_af',
         'annotation_level': VARIANT_LEVEL,
         'width': None,
         'label': 'gnomAD SV overlap AF',
         'model_field': True,
         'queryset_field': True},
        {'grid_column_name': 'gnomad_sv_overlap_percent',
         'variant_column': 'variantannotation__gnomad_sv_overlap_percent',
         'annotation_level': VARIANT_LEVEL,
         'width': None,
         'label': 'gnomAD SV overlap %',
         'model_field': True,
         'queryset_field': True},

        {'grid_column_name': 'gnomad_sv_overlap_name',
         'variant_column': 'variantannotation__gnomad_sv_overlap_name',
         'annotation_level': VARIANT_LEVEL,
         'width': None,
         'label': 'gnomAD SV overlap name',
         'model_field': True,
         'queryset_field': True},
    ]

    NEW_COLUMN_VCF_INFO = [
        {'info_id': 'SV_overlap_AF',
         'column_id': 'gnomad_sv_overlap_af',
         'number': 1,
         'type': 'S',
         'description': 'gnomAD SV (StructuralVariantOverlap): frequency of overlapping SV'},
        {'info_id': 'SV_overlap_PC',
         'column_id': 'gnomad_sv_overlap_percent',
         'number': 1,
         'type': 'S',
         'description': 'gnomAD SV (StructuralVariantOverlap): percent of input SV covered by reference SV'},
        {'info_id': 'SV_overlap_name',
         'column_id': 'gnomad_sv_overlap_name',
         'number': 1,
         'type': 'S',
         'description': 'gnomAD SV (StructuralVariantOverlap): name of overlapping SV'},
    ]

    bulk_insert_class_data(apps, "snpdb", [("VariantGridColumn", NEW_VARIANT_GRID_COLUMNS)])
    bulk_insert_class_data(apps, "snpdb", [("ColumnVCFInfo", NEW_COLUMN_VCF_INFO)])

    # Now add the custom columns. Since we'll be copying in the main stuff to other fields,
    # We'll leave these new ones out of default columns
    CustomColumnsCollection = apps.get_model("snpdb", "CustomColumnsCollection")
    CustomColumn = apps.get_model("snpdb", "CustomColumn")

    all_columns = CustomColumnsCollection.objects.get(name="All columns")
    gnomad_qs = all_columns.customcolumn_set.filter(column__grid_column_name__startswith='gnomad', column__annotation_level='V')
    sort_order_max = gnomad_qs.aggregate(Max("sort_order"))['sort_order__max']

    # Bump everything down a bit
    all_columns.customcolumn_set.filter(sort_order__gt=sort_order_max).update(sort_order=F("sort_order") + 3)

    sort_order_start = sort_order_max + 1
    for i, column_id in enumerate(_NEW_SV_COLUMNS):
        CustomColumn.objects.create(custom_columns_collection=all_columns,
                                    sort_order=sort_order_start + i,
                                    column_id=column_id)


def _reverse_new_gnomad_sv_columns(apps, _schema_editor):
    # Remove VariantGrid columns (will cascade delete the custom columns)
    VariantGridColumn = apps.get_model("snpdb", "VariantGridColumn")

    VariantGridColumn.objects.filter(grid_column_name__in=_NEW_SV_COLUMNS).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('snpdb', '0120_one_off_fix_symbolic_variants'),
    ]

    operations = [
        migrations.RunPython(_fix_issue_1010, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(_new_gnomad_sv_columns, reverse_code=_reverse_new_gnomad_sv_columns),
    ]
