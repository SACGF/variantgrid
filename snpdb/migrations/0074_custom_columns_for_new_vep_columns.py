# Generated by Django 4.0.3 on 2022-05-23 02:50

from django.db import migrations
from django.db.models import F

_NEW_COLUMNS = [
    'bayesdel_noaf_rankscore',
    'cadd_raw_rankscore',
    'clinpred_rankscore',
    'metalr_rankscore',
    'revel_rankscore',
    'vest4_rankscore',
    'aloft_pred',
    'aloft_prob_tolerant',
    'aloft_prob_recessive',
    'aloft_prob_dominant',
    'aloft_high_confidence',
    'aloft_ensembl_transcript',
    'nmd_escaping_variant',
]


def _custom_columns_for_new_vep_columns(apps, _schema_editor):
    CustomColumnsCollection = apps.get_model("snpdb", "CustomColumnsCollection")
    CustomColumn = apps.get_model("snpdb", "CustomColumn")

    num_new_columns = len(_NEW_COLUMNS)
    ccc_qs = CustomColumnsCollection.objects.filter(customcolumn__column__grid_column_name__endswith='most_damaging')
    custom_columns = []
    for ccc in ccc_qs.distinct():
        if first_pathogenicity := ccc.customcolumn_set.filter(column__grid_column_name__endswith='most_damaging').order_by("sort_order").first():
            insert_point = first_pathogenicity.sort_order
            ccc.customcolumn_set.filter(sort_order__gte=insert_point).update(sort_order=F("sort_order") + num_new_columns)
            for i, column_name in enumerate(_NEW_COLUMNS):
                custom_columns.append(CustomColumn(custom_columns_collection=ccc,
                                                   sort_order=insert_point + i,
                                                   column_id=column_name))
    if custom_columns:
        CustomColumn.objects.bulk_create(custom_columns)


def _reverse_custom_columns_for_new_vep_columns(apps, _schema_editor):
    CustomColumn = apps.get_model("snpdb", "CustomColumn")

    CustomColumn.objects.filter(column__grid_column_name__in=_NEW_COLUMNS).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('snpdb', '0073_new_vep_columns'),
    ]

    operations = [
        migrations.RunPython(_custom_columns_for_new_vep_columns, reverse_code=_reverse_custom_columns_for_new_vep_columns),
    ]
