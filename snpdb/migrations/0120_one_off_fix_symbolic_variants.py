# Generated by Django 4.2.9 on 2024-03-05 23:02

from django.db import migrations
from django.db.models.functions import Length

from manual.operations.manual_operations import ManualOperation


def _test_for_bad_symbolic_variants(apps):
    Variant = apps.get_model("snpdb", "Variant")
    ClinVar = apps.get_model("annotation", "ClinVar")

    qs = Variant.objects.filter(alt__seq__startswith='<').annotate(rlen=Length("locus__ref__seq")).filter(rlen__gt=1)
    if qs.exists():
        return True

    genome_build_name = 'GRCh37'
    alt_seq = '<DUP>'

    qs = ClinVar.objects.filter(version__genome_build__name=genome_build_name, variant__alt__seq=alt_seq)
    clinvar_variation_del = list(qs.values_list("clinvar_variation_id", flat=True))
    diff_representation = ClinVar.objects.filter(version__genome_build__name=genome_build_name,
                                                 clinvar_variation_id__in=clinvar_variation_del).exclude(variant__alt__seq=alt_seq)
    return diff_representation.exists()


class Migration(migrations.Migration):

    dependencies = [
        ('snpdb', '0119_remove_sequence_length'),
    ]

    operations = [
        ManualOperation(task_id=ManualOperation.task_id_manage(["one_off_fix_symbolic_variants"]),
                        test=_test_for_bad_symbolic_variants),
    ]
