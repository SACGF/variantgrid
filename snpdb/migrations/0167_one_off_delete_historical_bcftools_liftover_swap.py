# Generated by Django 4.2.11 on 2025-04-15 06:32

from django.db import migrations

from manual.operations.manual_operations import ManualOperation


def _get_variant_alleles(apps) -> list:
    BCFTOOLS_LIFTOVER = "BL"
    IMPORTED_TO_DATABASE = 'D'
    IMPORTED_NORMALIZED = 'N'

    VariantAllele = apps.get_model("snpdb", "VariantAllele")

    bad_va = []
    for va in VariantAllele.objects.filter(allele_linking_tool=BCFTOOLS_LIFTOVER):
        for other_va in va.allele.variantallele_set.all().filter(origin__in=[IMPORTED_TO_DATABASE, IMPORTED_NORMALIZED]).exclude(genome_build=va.genome_build):
            if va.variant.locus.ref == other_va.variant.alt and va.variant.alt == other_va.variant.locus.ref:
                bad_va.append(va)
    return bad_va


def _delete_bcftools_liftover_historical_swapped(apps, _schema_editor):
    if bad_va := _get_variant_alleles(apps):
        print(f"Found {len(bad_va)} variant alleles w/swapped ref/alt")

        genome_builds = set()
        for va in bad_va:
            genome_builds.add(va.genome_build)
            va.delete()

        dest_builds = ", ".join(sorted([gb.name for gb in genome_builds]))
        print(f"Deleted VariantAlleles lifted over for builds {dest_builds}")


class Migration(migrations.Migration):
    dependencies = [
        ("snpdb", "0166_remove_alleleliftover_error_message_and_more"),
    ]

    operations = [
        # We need to create the message before deleting them so make sure this runs 1st
        ManualOperation.operation_other(args=["Manually liftover variants (as admin top menu Variants->Liftover)"],
                                        test=_get_variant_alleles),
        migrations.RunPython(_delete_bcftools_liftover_historical_swapped)
    ]
