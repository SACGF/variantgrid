# Generated by Django 4.1.3 on 2022-12-20 23:53

from django.conf import settings
from django.db import migrations

from manual.operations.manual_operations import ManualOperation


def _one_off_user_tag_colors_to_collection(apps, _schema_editor):
    Tag = apps.get_model("snpdb", "Tag")
    TagColorsCollection = apps.get_model("snpdb", "TagColorsCollection")
    UserTagColors = apps.get_model("snpdb", "UserTagColors")
    GlobalSettings = apps.get_model("snpdb", "GlobalSettings")
    UserSettingsOverride = apps.get_model("snpdb", "UserSettingsOverride")
    User = apps.get_model("auth", "User")

    global_settings = GlobalSettings.objects.get()  # Only 1

    # The 1 mandatory tag
    tag = Tag.objects.get_or_create(pk=settings.TAG_REQUIRES_CLASSIFICATION)[0]
    collection = TagColorsCollection(name="Default public tag colors")
    collection.save(assign_permissions=False)
    UserTagColors.objects.create(collection=collection, tag=tag, rgb="#ff0000")
    global_settings.tag_colors = collection
    global_settings.save()

    # Currently - each user has their own collections
    # Make a new collection for each user
    for user in User.objects.filter(usertagcolors__isnull=False).distinct():
        collection = TagColorsCollection(user=user,
                                         name=f"legacy {user.username} user tag colors")
        collection.save(assign_permissions=False)
        user.usertagcolors_set.all().update(collection=collection)
        if user_settings := UserSettingsOverride.objects.filter(user=user).first():
            user_settings.tag_colors = collection
            user_settings.save()


class Migration(migrations.Migration):

    dependencies = [
        ('snpdb', '0088_alter_settingsoverride_default_genome_build_and_more'),
    ]

    operations = [
        migrations.RunPython(_one_off_user_tag_colors_to_collection),
        ManualOperation(task_id=ManualOperation.task_id_manage(["fix_tag_colors_collection_permissions"]))
    ]
