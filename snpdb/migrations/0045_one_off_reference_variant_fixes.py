# Generated by Django 3.2.6 on 2021-08-31 02:44

from django.db import migrations
from django.db.models import Count

from manual.operations.manual_operations import ManualOperation


def _test_has_bad_alleles_or_seq(apps):
    Allele = apps.get_model("snpdb", "Allele")
    GenomeBuild = apps.get_model("snpdb", "GenomeBuild")
    Sequence = apps.get_model("snpdb", "Sequence")
    REFERENCE_ALT = '='

    for build_name in ["GRCh37", "GRCh38"]:
        genome_build = GenomeBuild.objects.get(pk=build_name)
        qs = Allele.objects.filter(variantallele__genome_build=genome_build,
                                   variantallele__variant__alt__seq=REFERENCE_ALT)
        bad_alleles = qs.annotate(num_variants=Count("variantallele")).filter(num_variants__gte=2)
        if bad_alleles.exists():
            return True

    return Sequence.objects.filter(seq='.').exists()


def _one_off_reference_variant_fixes(apps, schema_editor):
    Variant = apps.get_model("snpdb", "Variant")
    Allele = apps.get_model("snpdb", "Allele")
    Sequence = apps.get_model("snpdb", "Sequence")
    GenomeBuild = apps.get_model("snpdb", "GenomeBuild")
    ClinVar = apps.get_model("annotation", "ClinVar")

    REFERENCE_ALT = '='

    # Reference Variants had been linked up to the same Allele, @see https://github.com/SACGF/variantgrid/issues/465
    for build_name in ["GRCh37", "GRCh38"]:
        genome_build = GenomeBuild.objects.get(pk=build_name)
        qs = Allele.objects.filter(variantallele__genome_build=genome_build,
                                   variantallele__variant__alt__seq=REFERENCE_ALT)
        bad_alleles = qs.annotate(num_variants=Count("variantallele")).filter(num_variants__gte=2)
        affected_variants = Variant.objects.filter(variantallele__allele__in=bad_alleles)
        variant_ids = ", ".join([str(pk) for pk in affected_variants.values_list("pk", flat=True)])
        print(f"Deleting Alleles for {genome_build} variants - may want to check these have Alleles later:")
        print(variant_ids)

    # Some ClinVar records had been read in with alt='.' need to convert to alt='='
    ref_alt = Sequence.objects.get(seq=REFERENCE_ALT)
    clinvar_records = []
    for cv in ClinVar.objects.filter(variant__alt__seq='.'):
        ref_variant = Variant.objects.get_or_create(locus=cv.variant.locus, alt=ref_alt)[0]
        cv.variant = ref_variant
        clinvar_records.append(cv)

    if clinvar_records:
        print(f"Updating variant on {len(clinvar_records)} ClinVar records (reference variant with alt='.')")
        ClinVar.objects.bulk_update(clinvar_records, ["variant"], batch_size=2000)

    # Liftover VCF inserted alt='.' instead of alt='=' (REFERENCE_ALT)
    # These wouldn't have been linked to alleles etc, and liftover pipeline just would have failed
    (n, deleted) = Sequence.objects.filter(seq='.').delete()
    expected = {'snpdb.Sequence', 'snpdb.Variant'}
    unexpected_deleted = set(deleted) - expected
    if unexpected_deleted:
        raise ValueError(f"Removing Sequence = '.' caused unexpected deletion of: {unexpected_deleted}")


class Migration(migrations.Migration):

    dependencies = [
        ('snpdb', '0044_clinvarkey_inject_acmg_description'),
    ]

    operations = [
        ManualOperation(task_id=ManualOperation.task_id_manage(["classification_ensure_alleles_and_liftover"]),
                        test=_test_has_bad_alleles_or_seq),
        migrations.RunPython(_one_off_reference_variant_fixes)
    ]
